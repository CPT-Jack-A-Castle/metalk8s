image: '__image__(dex)'

# NOTE: We do not use the new Helm3 chart for the moment as it's not yet part
# of stable repo, but since Dex 2.24 is affected by CVE (CVE-2020-15216) use
# the newest 2.27 image even if we still use the deprecated chart
imageTag: 'v2.28.1'

nodeSelector:
  node-role.kubernetes.io/infra: ''

tolerations:
  - key: "node-role.kubernetes.io/bootstrap"
    operator: "Exists"
    effect: "NoSchedule"
  - key: "node-role.kubernetes.io/infra"
    operator: "Exists"
    effect: "NoSchedule"

replicas: '__var__(dex.spec.deployment.replicas)'

# grpc support
grpc: false

# https termination by dex itself
https: true

service:
  clusterIP: '__var__(salt.metalk8s_network.get_oidc_service_ip())'

ingress:
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    kubernetes.io/ingress.class: "nginx-control-plane"
  path: /oidc
  hosts:
    - null

extraVolumes:
  - name: dex-login
    configMap:
      name: dex-login
  - name: nginx-ingress-ca-cert
    configMap:
      name: nginx-ingress-ca-cert

extraVolumeMounts:
  - name: dex-login
    mountPath: /web/themes/scality
  - name: nginx-ingress-ca-cert
    mountPath: /etc/ssl/certs/nginx-ingress-ca.crt
    subPath: ca.crt

podAnnotations:
  # Override default checksum as we want to manage it with salt
  checksum/config: '__slot__:salt:metalk8s_kubernetes.get_object_digest(kind="Secret", apiVersion="v1", namespace="metalk8s-auth", name="dex", path="data:config.yaml")'

certs:
  web:
    create: false
  grpc:
    create: false

# Explicitly set namespace from env since it's needed for Dex in K8s 1.21
# Sees: https://github.com/dexidp/dex/issues/2082
env:
  - name: KUBERNETES_POD_NAMESPACE
    valueFrom:
      fieldRef:
        fieldPath: metadata.namespace

# NOTE: Ignore these values, the configuration is computed from
#       - salt/metalk8s/addons/dex/config/dex.yaml
#       - salt/metalk8s/addons/dex/deployed/service-configuration.sls
config:
  issuer: 'dex.scality.com'
  web:
    tlsCert: /etc/dex/tls/https/server/tls.crt
    tlsKey: /etc/dex/tls/https/server/tls.key
  frontend:
    theme: "scality"
    issuer: "MetalK8s"

  oauth2:
    alwaysShowLoginScreen: true
    skipApprovalScreen: true
    responseTypes: ["code", "token", "id_token"]

  expiry:
    signingKeys: "6h"
    idTokens: "24h"

  staticClients: []

  enablePasswordDB: true
  staticPasswords: []
