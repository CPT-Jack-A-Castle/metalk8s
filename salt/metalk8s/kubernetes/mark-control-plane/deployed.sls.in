{%- from "metalk8s/map.jinja" import kubelet with context %}

{%- set node_name = pillar.bootstrap_id %}
{%- set cri_socket = kubelet.service.options['container-runtime-endpoint'] %}

Ensure node {{ node_name }} exists:
  test.configurable_test_state:
    - changes: False
    - result: __slot__:salt:metalk8s_kubernetes.object_exists(
                  kind="Node", apiVersion="v1", name="{{ node_name }}")
    # Retry as kubelet may take time to register
    - retry:
        attempts: 5

Mark control plane node:
  metalk8s_kubernetes.object_updated:
    - name: {{ node_name }}
    - kind: Node
    - apiVersion: v1
    - patch:
        metadata:
          labels:
            metalk8s.scality.com/version: "@@VERSION"
            node-role.kubernetes.io/master: ""
            node-role.kubernetes.io/etcd: ""
            node-role.kubernetes.io/bootstrap: ""
            node-role.kubernetes.io/infra: ""
          annotations:
            kubeadm.alpha.kubernetes.io/cri-socket: {{ cri_socket }}
        spec:
          taints:
          - key: "node-role.kubernetes.io/bootstrap"
            effect: "NoSchedule"
          - key: "node-role.kubernetes.io/infra"
            effect: "NoSchedule"
    - require:
      - test: Ensure node {{ node_name }} exists
