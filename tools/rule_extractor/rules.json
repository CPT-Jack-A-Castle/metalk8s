{
    "data": {
        "groups": [
            {
                "evaluationTime": 0.000509731,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-alertmanager.rules.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:41:00.311214771Z",
                "name": "alertmanager.rules",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "The configuration of the instances of the Alertmanager cluster `{{$labels.service}}` are out of sync."
                        },
                        "duration": 300,
                        "evaluationTime": 0.000353989,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:41:00.311222668Z",
                        "name": "AlertmanagerConfigInconsistent",
                        "query": "count_values by(service) (\"config_hash\", alertmanager_config_hash{job=\"prometheus-operator-alertmanager\",namespace=\"metalk8s-monitoring\"}) / on(service) group_left() label_replace(max by(name, job, namespace, controller) (prometheus_operator_spec_replicas{controller=\"alertmanager\",job=\"prometheus-operator-operator\",namespace=\"metalk8s-monitoring\"}), \"service\", \"$1\", \"name\", \"(.*)\") != 1",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Reloading Alertmanager's configuration has failed for {{ $labels.namespace }}/{{ $labels.pod}}."
                        },
                        "duration": 600,
                        "evaluationTime": 5.0647e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:41:00.311577771Z",
                        "name": "AlertmanagerFailedReload",
                        "query": "alertmanager_config_last_reload_successful{job=\"prometheus-operator-alertmanager\",namespace=\"metalk8s-monitoring\"} == 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Alertmanager has not found all other members of the cluster."
                        },
                        "duration": 300,
                        "evaluationTime": 9.5065e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:41:00.311629048Z",
                        "name": "AlertmanagerMembersInconsistent",
                        "query": "alertmanager_cluster_members{job=\"prometheus-operator-alertmanager\",namespace=\"metalk8s-monitoring\"} != on(service) group_left() count by(service) (alertmanager_cluster_members{job=\"prometheus-operator-alertmanager\",namespace=\"metalk8s-monitoring\"})",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.050051563,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-etcd.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:40:45.280649875Z",
                "name": "etcd",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "etcd cluster \"{{ $labels.job }}\": insufficient members ({{ $value }})."
                        },
                        "duration": 180,
                        "evaluationTime": 0.000548894,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:45.280658479Z",
                        "name": "etcdInsufficientMembers",
                        "query": "sum by(job) (up{job=~\".*etcd.*\"} == bool 1) < ((count by(job) (up{job=~\".*etcd.*\"}) + 1) / 2)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "etcd cluster \"{{ $labels.job }}\": member {{ $labels.instance }} has no leader."
                        },
                        "duration": 60,
                        "evaluationTime": 0.000129419,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:45.281209867Z",
                        "name": "etcdNoLeader",
                        "query": "etcd_server_has_leader{job=~\".*etcd.*\"} == 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "etcd cluster \"{{ $labels.job }}\": instance {{ $labels.instance }} has seen {{ $value }} leader changes within the last hour."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000164778,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:45.28134076Z",
                        "name": "etcdHighNumberOfLeaderChanges",
                        "query": "rate(etcd_server_leader_changes_seen_total{job=~\".*etcd.*\"}[15m]) > 3",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [
                            {
                                "activeAt": "2020-05-26T15:40:45.279979961Z",
                                "annotations": {
                                    "message": "etcd cluster \"kube-etcd\": 100% of requests for Watch failed on etcd instance 172.21.254.3:2381."
                                },
                                "labels": {
                                    "alertname": "etcdHighNumberOfFailedGRPCRequests",
                                    "grpc_method": "Watch",
                                    "grpc_service": "etcdserverpb.Watch",
                                    "instance": "172.21.254.3:2381",
                                    "job": "kube-etcd",
                                    "severity": "warning"
                                },
                                "state": "pending",
                                "value": "1e+02"
                            }
                        ],
                        "annotations": {
                            "message": "etcd cluster \"{{ $labels.job }}\": {{ $value }}% of requests for {{ $labels.grpc_method }} failed on etcd instance {{ $labels.instance }}."
                        },
                        "duration": 600,
                        "evaluationTime": 0.02164976,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:45.28150699Z",
                        "name": "etcdHighNumberOfFailedGRPCRequests",
                        "query": "100 * sum by(job, instance, grpc_service, grpc_method) (rate(grpc_server_handled_total{grpc_code!=\"OK\",job=~\".*etcd.*\"}[5m])) / sum by(job, instance, grpc_service, grpc_method) (rate(grpc_server_handled_total{job=~\".*etcd.*\"}[5m])) > 1",
                        "state": "pending",
                        "type": "alerting"
                    },
                    {
                        "alerts": [
                            {
                                "activeAt": "2020-05-26T15:40:45.279979961Z",
                                "annotations": {
                                    "message": "etcd cluster \"kube-etcd\": 100% of requests for Watch failed on etcd instance 172.21.254.3:2381."
                                },
                                "labels": {
                                    "alertname": "etcdHighNumberOfFailedGRPCRequests",
                                    "grpc_method": "Watch",
                                    "grpc_service": "etcdserverpb.Watch",
                                    "instance": "172.21.254.3:2381",
                                    "job": "kube-etcd",
                                    "severity": "critical"
                                },
                                "state": "pending",
                                "value": "1e+02"
                            }
                        ],
                        "annotations": {
                            "message": "etcd cluster \"{{ $labels.job }}\": {{ $value }}% of requests for {{ $labels.grpc_method }} failed on etcd instance {{ $labels.instance }}."
                        },
                        "duration": 300,
                        "evaluationTime": 0.024721669,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:45.303161601Z",
                        "name": "etcdHighNumberOfFailedGRPCRequests",
                        "query": "100 * sum by(job, instance, grpc_service, grpc_method) (rate(grpc_server_handled_total{grpc_code!=\"OK\",job=~\".*etcd.*\"}[5m])) / sum by(job, instance, grpc_service, grpc_method) (rate(grpc_server_handled_total{job=~\".*etcd.*\"}[5m])) > 5",
                        "state": "pending",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "etcd cluster \"{{ $labels.job }}\": gRPC requests to {{ $labels.grpc_method }} are taking {{ $value }}s on etcd instance {{ $labels.instance }}."
                        },
                        "duration": 600,
                        "evaluationTime": 0.000312983,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:45.327890666Z",
                        "name": "etcdGRPCRequestsSlow",
                        "query": "histogram_quantile(0.99, sum by(job, instance, grpc_service, grpc_method, le) (rate(grpc_server_handling_seconds_bucket{grpc_type=\"unary\",job=~\".*etcd.*\"}[5m]))) > 0.15",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "etcd cluster \"{{ $labels.job }}\": member communication with {{ $labels.To }} is taking {{ $value }}s on etcd instance {{ $labels.instance }}."
                        },
                        "duration": 600,
                        "evaluationTime": 0.000157253,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:45.3282061Z",
                        "name": "etcdMemberCommunicationSlow",
                        "query": "histogram_quantile(0.99, rate(etcd_network_peer_round_trip_time_seconds_bucket{job=~\".*etcd.*\"}[5m])) > 0.15",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "etcd cluster \"{{ $labels.job }}\": {{ $value }} proposal failures within the last hour on etcd instance {{ $labels.instance }}."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000177526,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:45.328364819Z",
                        "name": "etcdHighNumberOfFailedProposals",
                        "query": "rate(etcd_server_proposals_failed_total{job=~\".*etcd.*\"}[15m]) > 5",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "etcd cluster \"{{ $labels.job }}\": 99th percentile fync durations are {{ $value }}s on etcd instance {{ $labels.instance }}."
                        },
                        "duration": 600,
                        "evaluationTime": 0.000592388,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:45.328544064Z",
                        "name": "etcdHighFsyncDurations",
                        "query": "histogram_quantile(0.99, rate(etcd_disk_wal_fsync_duration_seconds_bucket{job=~\".*etcd.*\"}[5m])) > 0.5",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "etcd cluster \"{{ $labels.job }}\": 99th percentile commit durations {{ $value }}s on etcd instance {{ $labels.instance }}."
                        },
                        "duration": 600,
                        "evaluationTime": 0.000662901,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:45.329139727Z",
                        "name": "etcdHighCommitDurations",
                        "query": "histogram_quantile(0.99, rate(etcd_disk_backend_commit_duration_seconds_bucket{job=~\".*etcd.*\"}[5m])) > 0.25",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "{{ $value }}% of requests for {{ $labels.method }} failed on etcd instance {{ $labels.instance }}"
                        },
                        "duration": 600,
                        "evaluationTime": 0.000381395,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:45.329806465Z",
                        "name": "etcdHighNumberOfFailedHTTPRequests",
                        "query": "sum by(method) (rate(etcd_http_failed_total{code!=\"404\",job=~\".*etcd.*\"}[5m])) / sum by(method) (rate(etcd_http_received_total{job=~\".*etcd.*\"}[5m])) > 0.01",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "{{ $value }}% of requests for {{ $labels.method }} failed on etcd instance {{ $labels.instance }}."
                        },
                        "duration": 600,
                        "evaluationTime": 0.000290147,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:45.330190486Z",
                        "name": "etcdHighNumberOfFailedHTTPRequests",
                        "query": "sum by(method) (rate(etcd_http_failed_total{code!=\"404\",job=~\".*etcd.*\"}[5m])) / sum by(method) (rate(etcd_http_received_total{job=~\".*etcd.*\"}[5m])) > 0.05",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "etcd instance {{ $labels.instance }} HTTP requests to {{ $labels.method }} are slow."
                        },
                        "duration": 600,
                        "evaluationTime": 0.000217691,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:45.330482697Z",
                        "name": "etcdHTTPRequestsSlow",
                        "query": "histogram_quantile(0.99, rate(etcd_http_successful_duration_seconds_bucket[5m])) > 0.15",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.000633271,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-general.rules.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:40:55.521116139Z",
                "name": "general.rules",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "{{ printf \"%.4g\" $value }}% of the {{ $labels.job }}/{{ $labels.service }} targets in {{ $labels.namespace }} namespace are down."
                        },
                        "duration": 600,
                        "evaluationTime": 0.000463519,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:55.521123066Z",
                        "name": "TargetDown",
                        "query": "100 * (count by(job, namespace, service) (up == 0) / count by(job, namespace, service) (up)) > 10",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [
                            {
                                "activeAt": "2020-05-26T15:06:25.520605063Z",
                                "annotations": {
                                    "message": "This is an alert meant to ensure that the entire alerting pipeline is functional.\nThis alert is always firing, therefore it should always be firing in Alertmanager\nand always fire against a receiver. There are integrations with various notification\nmechanisms that send a notification when this alert is not firing. For example the\n\"DeadMansSnitch\" integration in PagerDuty."
                                },
                                "labels": {
                                    "alertname": "Watchdog",
                                    "severity": "none"
                                },
                                "state": "firing",
                                "value": "1e+00"
                            }
                        ],
                        "annotations": {
                            "message": "This is an alert meant to ensure that the entire alerting pipeline is functional.\nThis alert is always firing, therefore it should always be firing in Alertmanager\nand always fire against a receiver. There are integrations with various notification\nmechanisms that send a notification when this alert is not firing. For example the\n\"DeadMansSnitch\" integration in PagerDuty."
                        },
                        "duration": 0,
                        "evaluationTime": 0.000161101,
                        "health": "ok",
                        "labels": {
                            "severity": "none"
                        },
                        "lastEvaluation": "2020-05-26T15:40:55.521587766Z",
                        "name": "Watchdog",
                        "query": "vector(1)",
                        "state": "firing",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.031659872,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-k8s.rules.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:40:43.315508912Z",
                "name": "k8s.rules",
                "rules": [
                    {
                        "evaluationTime": 0.003140717,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:43.315521458Z",
                        "name": "namespace:container_cpu_usage_seconds_total:sum_rate",
                        "query": "sum by(namespace) (rate(container_cpu_usage_seconds_total{container!=\"POD\",image!=\"\",job=\"kubelet\",metrics_path=\"/metrics/cadvisor\"}[5m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.004626527,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:43.318668684Z",
                        "name": "node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate",
                        "query": "sum by(cluster, namespace, pod, container) (rate(container_cpu_usage_seconds_total{container!=\"POD\",image!=\"\",job=\"kubelet\",metrics_path=\"/metrics/cadvisor\"}[5m])) * on(cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1, max by(cluster, namespace, pod, node) (kube_pod_info))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.005076694,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:43.323301241Z",
                        "name": "node_namespace_pod_container:container_memory_working_set_bytes",
                        "query": "container_memory_working_set_bytes{image!=\"\",job=\"kubelet\",metrics_path=\"/metrics/cadvisor\"} * on(namespace, pod) group_left(node) topk by(namespace, pod) (1, max by(namespace, pod, node) (kube_pod_info))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.004869522,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:43.328385044Z",
                        "name": "node_namespace_pod_container:container_memory_rss",
                        "query": "container_memory_rss{image!=\"\",job=\"kubelet\",metrics_path=\"/metrics/cadvisor\"} * on(namespace, pod) group_left(node) topk by(namespace, pod) (1, max by(namespace, pod, node) (kube_pod_info))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.004556648,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:43.333263571Z",
                        "name": "node_namespace_pod_container:container_memory_cache",
                        "query": "container_memory_cache{image!=\"\",job=\"kubelet\",metrics_path=\"/metrics/cadvisor\"} * on(namespace, pod) group_left(node) topk by(namespace, pod) (1, max by(namespace, pod, node) (kube_pod_info))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.003954592,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:43.337826534Z",
                        "name": "node_namespace_pod_container:container_memory_swap",
                        "query": "container_memory_swap{image!=\"\",job=\"kubelet\",metrics_path=\"/metrics/cadvisor\"} * on(namespace, pod) group_left(node) topk by(namespace, pod) (1, max by(namespace, pod, node) (kube_pod_info))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.001427626,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:43.341786167Z",
                        "name": "namespace:container_memory_usage_bytes:sum",
                        "query": "sum by(namespace) (container_memory_usage_bytes{container!=\"POD\",image!=\"\",job=\"kubelet\",metrics_path=\"/metrics/cadvisor\"})",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.001251943,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:43.343216604Z",
                        "name": "namespace:kube_pod_container_resource_requests_memory_bytes:sum",
                        "query": "sum by(namespace) (sum by(namespace, pod) (max by(namespace, pod, container) (kube_pod_container_resource_requests_memory_bytes{job=\"kube-state-metrics\"}) * on(namespace, pod) group_left() max by(namespace, pod) (kube_pod_status_phase{phase=~\"Pending|Running\"} == 1)))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.001230284,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:43.344470788Z",
                        "name": "namespace:kube_pod_container_resource_requests_cpu_cores:sum",
                        "query": "sum by(namespace) (sum by(namespace, pod) (max by(namespace, pod, container) (kube_pod_container_resource_requests_cpu_cores{job=\"kube-state-metrics\"}) * on(namespace, pod) group_left() max by(namespace, pod) (kube_pod_status_phase{phase=~\"Pending|Running\"} == 1)))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.00093574,
                        "health": "ok",
                        "labels": {
                            "workload_type": "deployment"
                        },
                        "lastEvaluation": "2020-05-26T15:40:43.345703209Z",
                        "name": "mixin_pod_workload",
                        "query": "max by(cluster, namespace, workload, pod) (label_replace(label_replace(kube_pod_owner{job=\"kube-state-metrics\",owner_kind=\"ReplicaSet\"}, \"replicaset\", \"$1\", \"owner_name\", \"(.*)\") * on(replicaset, namespace) group_left(owner_name) topk by(replicaset, namespace) (1, max by(replicaset, namespace, owner_name) (kube_replicaset_owner{job=\"kube-state-metrics\"})), \"workload\", \"$1\", \"owner_name\", \"(.*)\"))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000290087,
                        "health": "ok",
                        "labels": {
                            "workload_type": "daemonset"
                        },
                        "lastEvaluation": "2020-05-26T15:40:43.346643717Z",
                        "name": "mixin_pod_workload",
                        "query": "max by(cluster, namespace, workload, pod) (label_replace(kube_pod_owner{job=\"kube-state-metrics\",owner_kind=\"DaemonSet\"}, \"workload\", \"$1\", \"owner_name\", \"(.*)\"))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000232288,
                        "health": "ok",
                        "labels": {
                            "workload_type": "statefulset"
                        },
                        "lastEvaluation": "2020-05-26T15:40:43.346935658Z",
                        "name": "mixin_pod_workload",
                        "query": "max by(cluster, namespace, workload, pod) (label_replace(kube_pod_owner{job=\"kube-state-metrics\",owner_kind=\"StatefulSet\"}, \"workload\", \"$1\", \"owner_name\", \"(.*)\"))",
                        "type": "recording"
                    }
                ]
            },
            {
                "evaluationTime": 0.001709201,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kube-apiserver-slos.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:40:32.747028236Z",
                "name": "kube-apiserver-slos",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "The API server is burning too much error budget",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn"
                        },
                        "duration": 120,
                        "evaluationTime": 0.000609443,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.747043265Z",
                        "name": "KubeAPIErrorBudgetBurn",
                        "query": "sum(apiserver_request:burnrate1h) > (14.4 * 0.01) and sum(apiserver_request:burnrate5m) > (14.4 * 0.01)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "The API server is burning too much error budget",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn"
                        },
                        "duration": 900,
                        "evaluationTime": 0.000267433,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.747680139Z",
                        "name": "KubeAPIErrorBudgetBurn",
                        "query": "sum(apiserver_request:burnrate6h) > (6 * 0.01) and sum(apiserver_request:burnrate30m) > (6 * 0.01)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "The API server is burning too much error budget",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn"
                        },
                        "duration": 3600,
                        "evaluationTime": 0.000381365,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.747949919Z",
                        "name": "KubeAPIErrorBudgetBurn",
                        "query": "sum(apiserver_request:burnrate1d) > (3 * 0.01) and sum(apiserver_request:burnrate2h) > (3 * 0.01)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "The API server is burning too much error budget",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn"
                        },
                        "duration": 10800,
                        "evaluationTime": 0.00040105,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.748334775Z",
                        "name": "KubeAPIErrorBudgetBurn",
                        "query": "sum(apiserver_request:burnrate3d) > (1 * 0.01) and sum(apiserver_request:burnrate6h) > (1 * 0.01)",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.395811387,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kube-apiserver.rules.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:40:31.976399213Z",
                "name": "kube-apiserver.rules",
                "rules": [
                    {
                        "evaluationTime": 0.017116126,
                        "health": "ok",
                        "labels": {
                            "verb": "read"
                        },
                        "lastEvaluation": "2020-05-26T15:40:31.976415827Z",
                        "name": "apiserver_request:burnrate1d",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[1d])) - (sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.1\",scope=\"resource\",verb=~\"LIST|GET\"}[1d])) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.5\",scope=\"namespace\",verb=~\"LIST|GET\"}[1d])) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"5\",scope=\"cluster\",verb=~\"LIST|GET\"}[1d])))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"LIST|GET\"}[1d]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[1d]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.014130146,
                        "health": "ok",
                        "labels": {
                            "verb": "read"
                        },
                        "lastEvaluation": "2020-05-26T15:40:31.993541963Z",
                        "name": "apiserver_request:burnrate1h",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[1h])) - (sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.1\",scope=\"resource\",verb=~\"LIST|GET\"}[1h])) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.5\",scope=\"namespace\",verb=~\"LIST|GET\"}[1h])) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"5\",scope=\"cluster\",verb=~\"LIST|GET\"}[1h])))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"LIST|GET\"}[1h]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.008292074,
                        "health": "ok",
                        "labels": {
                            "verb": "read"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.007677767Z",
                        "name": "apiserver_request:burnrate2h",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[2h])) - (sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.1\",scope=\"resource\",verb=~\"LIST|GET\"}[2h])) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.5\",scope=\"namespace\",verb=~\"LIST|GET\"}[2h])) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"5\",scope=\"cluster\",verb=~\"LIST|GET\"}[2h])))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"LIST|GET\"}[2h]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[2h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.00636012,
                        "health": "ok",
                        "labels": {
                            "verb": "read"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.015974055Z",
                        "name": "apiserver_request:burnrate30m",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[30m])) - (sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.1\",scope=\"resource\",verb=~\"LIST|GET\"}[30m])) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.5\",scope=\"namespace\",verb=~\"LIST|GET\"}[30m])) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"5\",scope=\"cluster\",verb=~\"LIST|GET\"}[30m])))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"LIST|GET\"}[30m]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[30m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.005288876,
                        "health": "ok",
                        "labels": {
                            "verb": "read"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.022337993Z",
                        "name": "apiserver_request:burnrate3d",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[3d])) - (sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.1\",scope=\"resource\",verb=~\"LIST|GET\"}[3d])) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.5\",scope=\"namespace\",verb=~\"LIST|GET\"}[3d])) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"5\",scope=\"cluster\",verb=~\"LIST|GET\"}[3d])))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"LIST|GET\"}[3d]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[3d]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.004675912,
                        "health": "ok",
                        "labels": {
                            "verb": "read"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.027630848Z",
                        "name": "apiserver_request:burnrate5m",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[5m])) - (sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.1\",scope=\"resource\",verb=~\"LIST|GET\"}[5m])) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.5\",scope=\"namespace\",verb=~\"LIST|GET\"}[5m])) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"5\",scope=\"cluster\",verb=~\"LIST|GET\"}[5m])))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.004782975,
                        "health": "ok",
                        "labels": {
                            "verb": "read"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.032309403Z",
                        "name": "apiserver_request:burnrate6h",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[6h])) - (sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.1\",scope=\"resource\",verb=~\"LIST|GET\"}[6h])) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.5\",scope=\"namespace\",verb=~\"LIST|GET\"}[6h])) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"5\",scope=\"cluster\",verb=~\"LIST|GET\"}[6h])))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"LIST|GET\"}[6h]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[6h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.002825068,
                        "health": "ok",
                        "labels": {
                            "verb": "write"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.037094057Z",
                        "name": "apiserver_request:burnrate1d",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1d])) - sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"1\",verb=~\"POST|PUT|PATCH|DELETE\"}[1d]))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1d]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1d]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.003357674,
                        "health": "ok",
                        "labels": {
                            "verb": "write"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.039921316Z",
                        "name": "apiserver_request:burnrate1h",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1h])) - sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"1\",verb=~\"POST|PUT|PATCH|DELETE\"}[1h]))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1h]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.003011771,
                        "health": "ok",
                        "labels": {
                            "verb": "write"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.04328191Z",
                        "name": "apiserver_request:burnrate2h",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[2h])) - sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"1\",verb=~\"POST|PUT|PATCH|DELETE\"}[2h]))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[2h]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[2h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.00267755,
                        "health": "ok",
                        "labels": {
                            "verb": "write"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.046297284Z",
                        "name": "apiserver_request:burnrate30m",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[30m])) - sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"1\",verb=~\"POST|PUT|PATCH|DELETE\"}[30m]))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[30m]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[30m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.0030253,
                        "health": "ok",
                        "labels": {
                            "verb": "write"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.048977607Z",
                        "name": "apiserver_request:burnrate3d",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[3d])) - sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"1\",verb=~\"POST|PUT|PATCH|DELETE\"}[3d]))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[3d]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[3d]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.002300884,
                        "health": "ok",
                        "labels": {
                            "verb": "write"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.052005344Z",
                        "name": "apiserver_request:burnrate5m",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m])) - sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"1\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m]))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.002448537,
                        "health": "ok",
                        "labels": {
                            "verb": "write"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.054307878Z",
                        "name": "apiserver_request:burnrate6h",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[6h])) - sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"1\",verb=~\"POST|PUT|PATCH|DELETE\"}[6h]))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[6h]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[6h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.005884856,
                        "health": "ok",
                        "labels": {
                            "verb": "all"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.056758262Z",
                        "name": "apiserver_request:availability30d",
                        "query": "1 - ((sum(increase(apiserver_request_duration_seconds_count{verb=~\"POST|PUT|PATCH|DELETE\"}[30d])) - sum(increase(apiserver_request_duration_seconds_bucket{le=\"1\",verb=~\"POST|PUT|PATCH|DELETE\"}[30d]))) + (sum(increase(apiserver_request_duration_seconds_count{verb=~\"LIST|GET\"}[30d])) - (sum(increase(apiserver_request_duration_seconds_bucket{le=\"0.1\",scope=\"resource\",verb=~\"LIST|GET\"}[30d])) + sum(increase(apiserver_request_duration_seconds_bucket{le=\"0.5\",scope=\"namespace\",verb=~\"LIST|GET\"}[30d])) + sum(increase(apiserver_request_duration_seconds_bucket{le=\"5\",scope=\"cluster\",verb=~\"LIST|GET\"}[30d])))) + sum(code:apiserver_request_total:increase30d{code=~\"5..\"})) / sum(code:apiserver_request_total:increase30d)",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.003898922,
                        "health": "ok",
                        "labels": {
                            "verb": "read"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.062646722Z",
                        "name": "apiserver_request:availability30d",
                        "query": "1 - (sum(increase(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[30d])) - (sum(increase(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.1\",scope=\"resource\",verb=~\"LIST|GET\"}[30d])) + sum(increase(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.5\",scope=\"namespace\",verb=~\"LIST|GET\"}[30d])) + sum(increase(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"5\",scope=\"cluster\",verb=~\"LIST|GET\"}[30d]))) + sum(code:apiserver_request_total:increase30d{code=~\"5..\",verb=\"read\"})) / sum(code:apiserver_request_total:increase30d{verb=\"read\"})",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.001763583,
                        "health": "ok",
                        "labels": {
                            "verb": "write"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.066549241Z",
                        "name": "apiserver_request:availability30d",
                        "query": "1 - ((sum(increase(apiserver_request_duration_seconds_count{verb=~\"POST|PUT|PATCH|DELETE\"}[30d])) - sum(increase(apiserver_request_duration_seconds_bucket{le=\"1\",verb=~\"POST|PUT|PATCH|DELETE\"}[30d]))) + sum(code:apiserver_request_total:increase30d{code=~\"5..\",verb=\"write\"})) / sum(code:apiserver_request_total:increase30d{verb=\"write\"})",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.003724458,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:32.0683162Z",
                        "name": "code_verb:apiserver_request_total:increase30d",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{job=\"apiserver\"}[30d]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000119747,
                        "health": "ok",
                        "labels": {
                            "verb": "read"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.072042773Z",
                        "name": "code:apiserver_request_total:increase30d",
                        "query": "sum by(code) (code_verb:apiserver_request_total:increase30d{verb=~\"LIST|GET\"})",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000152767,
                        "health": "ok",
                        "labels": {
                            "verb": "write"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.072163384Z",
                        "name": "code:apiserver_request_total:increase30d",
                        "query": "sum by(code) (code_verb:apiserver_request_total:increase30d{verb=~\"POST|PUT|PATCH|DELETE\"})",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.00224058,
                        "health": "ok",
                        "labels": {
                            "verb": "read"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.072317029Z",
                        "name": "code_resource:apiserver_request_total:rate5m",
                        "query": "sum by(code, resource) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.001601546,
                        "health": "ok",
                        "labels": {
                            "verb": "write"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.074559999Z",
                        "name": "code_resource:apiserver_request_total:rate5m",
                        "query": "sum by(code, resource) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.045530692,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.99",
                            "verb": "read"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.076164623Z",
                        "name": "cluster_quantile:apiserver_request_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.99, sum by(le, resource) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))) > 0",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.063582396,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.99",
                            "verb": "write"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.121698749Z",
                        "name": "cluster_quantile:apiserver_request_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.99, sum by(le, resource) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m]))) > 0",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.007775474,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:32.185285149Z",
                        "name": "cluster:apiserver_request_duration_seconds:mean5m",
                        "query": "sum without(instance, pod) (rate(apiserver_request_duration_seconds_sum{subresource!=\"log\",verb!~\"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT\"}[5m])) / sum without(instance, pod) (rate(apiserver_request_duration_seconds_count{subresource!=\"log\",verb!~\"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT\"}[5m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.060487963,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.99"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.193067925Z",
                        "name": "cluster_quantile:apiserver_request_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.99, sum without(instance, pod) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",subresource!=\"log\",verb!~\"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT\"}[5m])))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.057451192,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.9"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.253561141Z",
                        "name": "cluster_quantile:apiserver_request_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.9, sum without(instance, pod) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",subresource!=\"log\",verb!~\"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT\"}[5m])))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.061191637,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.5"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.311016995Z",
                        "name": "cluster_quantile:apiserver_request_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.5, sum without(instance, pod) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",subresource!=\"log\",verb!~\"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT\"}[5m])))",
                        "type": "recording"
                    }
                ]
            },
            {
                "evaluationTime": 0.000622005,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kube-prometheus-general.rules.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:40:57.65019814Z",
                "name": "kube-prometheus-general.rules",
                "rules": [
                    {
                        "evaluationTime": 0.000470657,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:57.650204645Z",
                        "name": "count:up1",
                        "query": "count without(instance, pod, node) (up == 1)",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000142859,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:57.650676934Z",
                        "name": "count:up0",
                        "query": "count without(instance, pod, node) (up == 0)",
                        "type": "recording"
                    }
                ]
            },
            {
                "evaluationTime": 0.007051975,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kube-prometheus-node-recording.rules.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:40:43.690365405Z",
                "name": "kube-prometheus-node-recording.rules",
                "rules": [
                    {
                        "evaluationTime": 0.001111088,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:43.690377817Z",
                        "name": "instance:node_cpu:rate:sum",
                        "query": "sum by(instance) (rate(node_cpu_seconds_total{mode!=\"idle\",mode!=\"iowait\"}[3m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.00050726,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:43.69149491Z",
                        "name": "instance:node_filesystem_usage:sum",
                        "query": "sum by(instance) ((node_filesystem_size_bytes{mountpoint=\"/\"} - node_filesystem_free_bytes{mountpoint=\"/\"}))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.00106625,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:43.692006048Z",
                        "name": "instance:node_network_receive_bytes:rate:sum",
                        "query": "sum by(instance) (rate(node_network_receive_bytes_total[3m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.001290293,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:43.693075869Z",
                        "name": "instance:node_network_transmit_bytes:rate:sum",
                        "query": "sum by(instance) (rate(node_network_transmit_bytes_total[3m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.001553697,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:43.694372129Z",
                        "name": "instance:node_cpu:ratio",
                        "query": "sum without(cpu, mode) (rate(node_cpu_seconds_total{mode!=\"idle\",mode!=\"iowait\"}[5m])) / on(instance) group_left() count by(instance) (sum by(instance, cpu) (node_cpu_seconds_total))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000711919,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:43.69593091Z",
                        "name": "cluster:node_cpu:sum_rate5m",
                        "query": "sum(rate(node_cpu_seconds_total{mode!=\"idle\",mode!=\"iowait\"}[5m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000769216,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:43.69664604Z",
                        "name": "cluster:node_cpu:ratio",
                        "query": "cluster:node_cpu_seconds_total:rate5m / count(sum by(instance, cpu) (node_cpu_seconds_total))",
                        "type": "recording"
                    }
                ]
            },
            {
                "evaluationTime": 0.003977399,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kube-scheduler.rules.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:41:00.190635007Z",
                "name": "kube-scheduler.rules",
                "rules": [
                    {
                        "evaluationTime": 0.000500115,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.99"
                        },
                        "lastEvaluation": "2020-05-26T15:41:00.190657703Z",
                        "name": "cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.99, sum without(instance, pod) (rate(scheduler_e2e_scheduling_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000797568,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.99"
                        },
                        "lastEvaluation": "2020-05-26T15:41:00.191159567Z",
                        "name": "cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.99, sum without(instance, pod) (rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000376601,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.99"
                        },
                        "lastEvaluation": "2020-05-26T15:41:00.191963663Z",
                        "name": "cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.99, sum without(instance, pod) (rate(scheduler_binding_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.00039731,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.9"
                        },
                        "lastEvaluation": "2020-05-26T15:41:00.192342319Z",
                        "name": "cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.9, sum without(instance, pod) (rate(scheduler_e2e_scheduling_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000659228,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.9"
                        },
                        "lastEvaluation": "2020-05-26T15:41:00.192742933Z",
                        "name": "cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.9, sum without(instance, pod) (rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000358351,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.9"
                        },
                        "lastEvaluation": "2020-05-26T15:41:00.1934055Z",
                        "name": "cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.9, sum without(instance, pod) (rate(scheduler_binding_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000324761,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.5"
                        },
                        "lastEvaluation": "2020-05-26T15:41:00.193765201Z",
                        "name": "cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.5, sum without(instance, pod) (rate(scheduler_e2e_scheduling_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000296942,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.5"
                        },
                        "lastEvaluation": "2020-05-26T15:41:00.194091408Z",
                        "name": "cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.5, sum without(instance, pod) (rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000222449,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.5"
                        },
                        "lastEvaluation": "2020-05-26T15:41:00.194389468Z",
                        "name": "cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.5, sum without(instance, pod) (rate(scheduler_binding_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])))",
                        "type": "recording"
                    }
                ]
            },
            {
                "evaluationTime": 0.00130163,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kube-state-metrics.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:40:46.308086292Z",
                "name": "kube-state-metrics",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "kube-state-metrics is experiencing errors at an elevated rate in list operations. This is likely causing it to not be able to expose metrics about Kubernetes objects correctly or at all.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatemetricslisterrors"
                        },
                        "duration": 900,
                        "evaluationTime": 0.000736412,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:46.308100817Z",
                        "name": "KubeStateMetricsListErrors",
                        "query": "(sum(rate(kube_state_metrics_list_total{job=\"kube-state-metrics\",result=\"error\"}[5m])) / sum(rate(kube_state_metrics_list_total{job=\"kube-state-metrics\"}[5m]))) > 0.01",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "kube-state-metrics is experiencing errors at an elevated rate in watch operations. This is likely causing it to not be able to expose metrics about Kubernetes objects correctly or at all.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatemetricswatcherrors"
                        },
                        "duration": 900,
                        "evaluationTime": 0.000544067,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:46.308841438Z",
                        "name": "KubeStateMetricsWatchErrors",
                        "query": "(sum(rate(kube_state_metrics_watch_total{job=\"kube-state-metrics\",result=\"error\"}[5m])) / sum(rate(kube_state_metrics_watch_total{job=\"kube-state-metrics\"}[5m]))) > 0.01",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.000948733,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kubelet.rules.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:40:56.102446172Z",
                "name": "kubelet.rules",
                "rules": [
                    {
                        "evaluationTime": 0.000445042,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.99"
                        },
                        "lastEvaluation": "2020-05-26T15:40:56.102453734Z",
                        "name": "node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.99, sum by(instance, le) (rate(kubelet_pleg_relist_duration_seconds_bucket[5m])) * on(instance) group_left(node) kubelet_node_name{job=\"kubelet\",metrics_path=\"/metrics\"})",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.00024178,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.9"
                        },
                        "lastEvaluation": "2020-05-26T15:40:56.102900523Z",
                        "name": "node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.9, sum by(instance, le) (rate(kubelet_pleg_relist_duration_seconds_bucket[5m])) * on(instance) group_left(node) kubelet_node_name{job=\"kubelet\",metrics_path=\"/metrics\"})",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000251209,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.5"
                        },
                        "lastEvaluation": "2020-05-26T15:40:56.103143211Z",
                        "name": "node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.5, sum by(instance, le) (rate(kubelet_pleg_relist_duration_seconds_bucket[5m])) * on(instance) group_left(node) kubelet_node_name{job=\"kubelet\",metrics_path=\"/metrics\"})",
                        "type": "recording"
                    }
                ]
            },
            {
                "evaluationTime": 0.004867572,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kubernetes-apps.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:40:40.007469839Z",
                "name": "kubernetes-apps",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Pod {{ $labels.namespace }}/{{ $labels.pod }} ({{ $labels.container }}) is restarting {{ printf \"%.2f\" $value }} times / 5 minutes.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepodcrashlooping"
                        },
                        "duration": 900,
                        "evaluationTime": 0.000654436,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:40.007477414Z",
                        "name": "KubePodCrashLooping",
                        "query": "rate(kube_pod_container_status_restarts_total{job=\"kube-state-metrics\",namespace=~\".*\"}[15m]) * 60 * 5 > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in a non-ready state for longer than 15 minutes.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepodnotready"
                        },
                        "duration": 900,
                        "evaluationTime": 0.000849906,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:40.008133342Z",
                        "name": "KubePodNotReady",
                        "query": "sum by(namespace, pod) (max by(namespace, pod) (kube_pod_status_phase{job=\"kube-state-metrics\",namespace=~\".*\",phase=~\"Pending|Unknown\"}) * on(namespace, pod) group_left(owner_kind) max by(namespace, pod, owner_kind) (kube_pod_owner{owner_kind!=\"Job\"})) > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Deployment generation for {{ $labels.namespace }}/{{ $labels.deployment }} does not match, this indicates that the Deployment has failed but has not been rolled back.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedeploymentgenerationmismatch"
                        },
                        "duration": 900,
                        "evaluationTime": 0.000232795,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:40.00898417Z",
                        "name": "KubeDeploymentGenerationMismatch",
                        "query": "kube_deployment_status_observed_generation{job=\"kube-state-metrics\",namespace=~\".*\"} != kube_deployment_metadata_generation{job=\"kube-state-metrics\",namespace=~\".*\"}",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Deployment {{ $labels.namespace }}/{{ $labels.deployment }} has not matched the expected number of replicas for longer than 15 minutes.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedeploymentreplicasmismatch"
                        },
                        "duration": 900,
                        "evaluationTime": 0.000386023,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:40.00921777Z",
                        "name": "KubeDeploymentReplicasMismatch",
                        "query": "(kube_deployment_spec_replicas{job=\"kube-state-metrics\",namespace=~\".*\"} != kube_deployment_status_replicas_available{job=\"kube-state-metrics\",namespace=~\".*\"}) and (changes(kube_deployment_status_replicas_updated{job=\"kube-state-metrics\",namespace=~\".*\"}[5m]) == 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} has not matched the expected number of replicas for longer than 15 minutes.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetreplicasmismatch"
                        },
                        "duration": 900,
                        "evaluationTime": 0.000179243,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:40.009604598Z",
                        "name": "KubeStatefulSetReplicasMismatch",
                        "query": "(kube_statefulset_status_replicas_ready{job=\"kube-state-metrics\",namespace=~\".*\"} != kube_statefulset_status_replicas{job=\"kube-state-metrics\",namespace=~\".*\"}) and (changes(kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\",namespace=~\".*\"}[5m]) == 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "StatefulSet generation for {{ $labels.namespace }}/{{ $labels.statefulset }} does not match, this indicates that the StatefulSet has failed but has not been rolled back.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetgenerationmismatch"
                        },
                        "duration": 900,
                        "evaluationTime": 0.000100667,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:40.009784496Z",
                        "name": "KubeStatefulSetGenerationMismatch",
                        "query": "kube_statefulset_status_observed_generation{job=\"kube-state-metrics\",namespace=~\".*\"} != kube_statefulset_metadata_generation{job=\"kube-state-metrics\",namespace=~\".*\"}",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} update has not been rolled out.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetupdatenotrolledout"
                        },
                        "duration": 900,
                        "evaluationTime": 0.00016555,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:40.009885728Z",
                        "name": "KubeStatefulSetUpdateNotRolledOut",
                        "query": "max without(revision) (kube_statefulset_status_current_revision{job=\"kube-state-metrics\",namespace=~\".*\"} unless kube_statefulset_status_update_revision{job=\"kube-state-metrics\",namespace=~\".*\"}) * (kube_statefulset_replicas{job=\"kube-state-metrics\",namespace=~\".*\"} != kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\",namespace=~\".*\"})",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Only {{ $value | humanizePercentage }} of the desired Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} are scheduled and ready.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetrolloutstuck"
                        },
                        "duration": 900,
                        "evaluationTime": 0.000148895,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:40.010051854Z",
                        "name": "KubeDaemonSetRolloutStuck",
                        "query": "kube_daemonset_status_number_ready{job=\"kube-state-metrics\",namespace=~\".*\"} / kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\",namespace=~\".*\"} < 1",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Pod {{ $labels.namespace }}/{{ $labels.pod }} container {{ $labels.container}} has been in waiting state for longer than 1 hour.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecontainerwaiting"
                        },
                        "duration": 3600,
                        "evaluationTime": 0.001542034,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:40.010201334Z",
                        "name": "KubeContainerWaiting",
                        "query": "sum by(namespace, pod, container) (kube_pod_container_status_waiting_reason{job=\"kube-state-metrics\",namespace=~\".*\"}) > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} are not scheduled.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetnotscheduled"
                        },
                        "duration": 600,
                        "evaluationTime": 0.000154964,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:40.011744378Z",
                        "name": "KubeDaemonSetNotScheduled",
                        "query": "kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\",namespace=~\".*\"} - kube_daemonset_status_current_number_scheduled{job=\"kube-state-metrics\",namespace=~\".*\"} > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} are running where they are not supposed to run.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetmisscheduled"
                        },
                        "duration": 900,
                        "evaluationTime": 0.00010058,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:40.01189999Z",
                        "name": "KubeDaemonSetMisScheduled",
                        "query": "kube_daemonset_status_number_misscheduled{job=\"kube-state-metrics\",namespace=~\".*\"} > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "CronJob {{ $labels.namespace }}/{{ $labels.cronjob }} is taking more than 1h to complete.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecronjobrunning"
                        },
                        "duration": 3600,
                        "evaluationTime": 5.6974e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:40.012001228Z",
                        "name": "KubeCronJobRunning",
                        "query": "time() - kube_cronjob_next_schedule_time{job=\"kube-state-metrics\",namespace=~\".*\"} > 3600",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Job {{ $labels.namespace }}/{{ $labels.job_name }} is taking more than one hour to complete.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubejobcompletion"
                        },
                        "duration": 3600,
                        "evaluationTime": 5.9788e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:40.012058777Z",
                        "name": "KubeJobCompletion",
                        "query": "kube_job_spec_completions{job=\"kube-state-metrics\",namespace=~\".*\"} - kube_job_status_succeeded{job=\"kube-state-metrics\",namespace=~\".*\"} > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Job {{ $labels.namespace }}/{{ $labels.job_name }} failed to complete.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubejobfailed"
                        },
                        "duration": 900,
                        "evaluationTime": 5.4347e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:40.012119105Z",
                        "name": "KubeJobFailed",
                        "query": "kube_job_failed{job=\"kube-state-metrics\",namespace=~\".*\"} > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "HPA {{ $labels.namespace }}/{{ $labels.hpa }} has not matched the desired number of replicas for longer than 15 minutes.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubehpareplicasmismatch"
                        },
                        "duration": 900,
                        "evaluationTime": 9.8356e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:40.012174003Z",
                        "name": "KubeHpaReplicasMismatch",
                        "query": "(kube_hpa_status_desired_replicas{job=\"kube-state-metrics\",namespace=~\".*\"} != kube_hpa_status_current_replicas{job=\"kube-state-metrics\",namespace=~\".*\"}) and changes(kube_hpa_status_current_replicas[15m]) == 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "HPA {{ $labels.namespace }}/{{ $labels.hpa }} has been running at max replicas for longer than 15 minutes.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubehpamaxedout"
                        },
                        "duration": 900,
                        "evaluationTime": 6.4129e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:40.012272991Z",
                        "name": "KubeHpaMaxedOut",
                        "query": "kube_hpa_status_current_replicas{job=\"kube-state-metrics\",namespace=~\".*\"} == kube_hpa_spec_max_replicas{job=\"kube-state-metrics\",namespace=~\".*\"}",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.004539025,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kubernetes-resources.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:40:32.942412851Z",
                "name": "kubernetes-resources",
                "rules": [
                    {
                        "alerts": [
                            {
                                "activeAt": "2020-05-26T15:07:02.940582493Z",
                                "annotations": {
                                    "message": "Cluster has overcommitted CPU resource requests for Pods and cannot tolerate node failure.",
                                    "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecpuovercommit"
                                },
                                "labels": {
                                    "alertname": "KubeCPUOvercommit",
                                    "severity": "warning"
                                },
                                "state": "firing",
                                "value": "7.125e-01"
                            }
                        ],
                        "annotations": {
                            "message": "Cluster has overcommitted CPU resource requests for Pods and cannot tolerate node failure.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecpuovercommit"
                        },
                        "duration": 300,
                        "evaluationTime": 0.00134054,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.942428388Z",
                        "name": "KubeCPUOvercommit",
                        "query": "sum(namespace:kube_pod_container_resource_requests_cpu_cores:sum) / sum(kube_node_status_allocatable_cpu_cores) > (count(kube_node_status_allocatable_cpu_cores) - 1) / count(kube_node_status_allocatable_cpu_cores)",
                        "state": "firing",
                        "type": "alerting"
                    },
                    {
                        "alerts": [
                            {
                                "activeAt": "2020-05-26T15:07:02.940582493Z",
                                "annotations": {
                                    "message": "Cluster has overcommitted memory resource requests for Pods and cannot tolerate node failure.",
                                    "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubememoryovercommit"
                                },
                                "labels": {
                                    "alertname": "KubeMemoryOvercommit",
                                    "severity": "warning"
                                },
                                "state": "firing",
                                "value": "1.4018078591951733e-01"
                            }
                        ],
                        "annotations": {
                            "message": "Cluster has overcommitted memory resource requests for Pods and cannot tolerate node failure.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubememoryovercommit"
                        },
                        "duration": 300,
                        "evaluationTime": 0.001462222,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.943774936Z",
                        "name": "KubeMemoryOvercommit",
                        "query": "sum(namespace:kube_pod_container_resource_requests_memory_bytes:sum) / sum(kube_node_status_allocatable_memory_bytes) > (count(kube_node_status_allocatable_memory_bytes) - 1) / count(kube_node_status_allocatable_memory_bytes)",
                        "state": "firing",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Cluster has overcommitted CPU resource requests for Namespaces.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecpuquotaovercommit"
                        },
                        "duration": 300,
                        "evaluationTime": 0.000426839,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.945245723Z",
                        "name": "KubeCPUQuotaOvercommit",
                        "query": "sum(kube_resourcequota{job=\"kube-state-metrics\",resource=\"cpu\",type=\"hard\"}) / sum(kube_node_status_allocatable_cpu_cores) > 1.5",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Cluster has overcommitted memory resource requests for Namespaces.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubememoryquotaovercommit"
                        },
                        "duration": 300,
                        "evaluationTime": 0.000234911,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.945675302Z",
                        "name": "KubeMemoryQuotaOvercommit",
                        "query": "sum(kube_resourcequota{job=\"kube-state-metrics\",resource=\"memory\",type=\"hard\"}) / sum(kube_node_status_allocatable_memory_bytes{job=\"node-exporter\"}) > 1.5",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotaexceeded"
                        },
                        "duration": 900,
                        "evaluationTime": 0.000358839,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.945912437Z",
                        "name": "KubeQuotaExceeded",
                        "query": "kube_resourcequota{job=\"kube-state-metrics\",type=\"used\"} / ignoring(instance, job, type) (kube_resourcequota{job=\"kube-state-metrics\",type=\"hard\"} > 0) > 0.9",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "{{ $value | humanizePercentage }} throttling of CPU in namespace {{ $labels.namespace }} for container {{ $labels.container }} in pod {{ $labels.pod }}.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-cputhrottlinghigh"
                        },
                        "duration": 900,
                        "evaluationTime": 0.000676818,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:32.946273767Z",
                        "name": "CPUThrottlingHigh",
                        "query": "sum by(container, pod, namespace) (increase(container_cpu_cfs_throttled_periods_total{container!=\"\"}[5m])) / sum by(container, pod, namespace) (increase(container_cpu_cfs_periods_total[5m])) > (25 / 100)",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.000659864,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kubernetes-storage.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:40:56.331188501Z",
                "name": "kubernetes-storage",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "The PersistentVolume claimed by {{ $labels.persistentvolumeclaim }} in Namespace {{ $labels.namespace }} is only {{ $value | humanizePercentage }} free.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumefillingup"
                        },
                        "duration": 60,
                        "evaluationTime": 0.000271123,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:56.331195116Z",
                        "name": "KubePersistentVolumeFillingUp",
                        "query": "kubelet_volume_stats_available_bytes{job=\"kubelet\",metrics_path=\"/metrics\",namespace=~\".*\"} / kubelet_volume_stats_capacity_bytes{job=\"kubelet\",metrics_path=\"/metrics\",namespace=~\".*\"} < 0.03",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Based on recent sampling, the PersistentVolume claimed by {{ $labels.persistentvolumeclaim }} in Namespace {{ $labels.namespace }} is expected to fill up within four days. Currently {{ $value | humanizePercentage }} is available.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumefillingup"
                        },
                        "duration": 3600,
                        "evaluationTime": 0.000266416,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:56.331467627Z",
                        "name": "KubePersistentVolumeFillingUp",
                        "query": "(kubelet_volume_stats_available_bytes{job=\"kubelet\",metrics_path=\"/metrics\",namespace=~\".*\"} / kubelet_volume_stats_capacity_bytes{job=\"kubelet\",metrics_path=\"/metrics\",namespace=~\".*\"}) < 0.15 and predict_linear(kubelet_volume_stats_available_bytes{job=\"kubelet\",metrics_path=\"/metrics\",namespace=~\".*\"}[6h], 4 * 24 * 3600) < 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "The persistent volume {{ $labels.persistentvolume }} has status {{ $labels.phase }}.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumeerrors"
                        },
                        "duration": 300,
                        "evaluationTime": 0.00011305,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:56.331734962Z",
                        "name": "KubePersistentVolumeErrors",
                        "query": "kube_persistentvolume_status_phase{job=\"kube-state-metrics\",phase=~\"Failed|Pending\"} > 0",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.031996433,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kubernetes-system-apiserver.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:40:52.147166073Z",
                "name": "kubernetes-system-apiserver",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "The API server has an abnormal latency of {{ $value }} seconds for {{ $labels.verb }} {{ $labels.resource }}.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapilatencyhigh"
                        },
                        "duration": 300,
                        "evaluationTime": 0.016635602,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:52.147183342Z",
                        "name": "KubeAPILatencyHigh",
                        "query": "(cluster:apiserver_request_duration_seconds:mean5m{job=\"apiserver\"} > on(verb) group_left() (avg by(verb) (cluster:apiserver_request_duration_seconds:mean5m{job=\"apiserver\"} >= 0) + 2 * stddev by(verb) (cluster:apiserver_request_duration_seconds:mean5m{job=\"apiserver\"} >= 0))) > on(verb) group_left() 1.2 * avg by(verb) (cluster:apiserver_request_duration_seconds:mean5m{job=\"apiserver\"} >= 0) and on(verb, resource) cluster_quantile:apiserver_request_duration_seconds:histogram_quantile{job=\"apiserver\",quantile=\"0.99\"} > 1",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "API server is returning errors for {{ $value | humanizePercentage }} of requests for {{ $labels.verb }} {{ $labels.resource }} {{ $labels.subresource }}.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorshigh"
                        },
                        "duration": 600,
                        "evaluationTime": 0.013473835,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:52.163826581Z",
                        "name": "KubeAPIErrorsHigh",
                        "query": "sum by(resource, subresource, verb) (rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\"}[5m])) / sum by(resource, subresource, verb) (rate(apiserver_request_total{job=\"apiserver\"}[5m])) > 0.05",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "A client certificate used to authenticate to the apiserver is expiring in less than 7.0 days.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclientcertificateexpiration"
                        },
                        "duration": 0,
                        "evaluationTime": 0.000794333,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:52.177306239Z",
                        "name": "KubeClientCertificateExpiration",
                        "query": "apiserver_client_certificate_expiration_seconds_count{job=\"apiserver\"} > 0 and on(job) histogram_quantile(0.01, sum by(job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job=\"apiserver\"}[5m]))) < 604800",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "A client certificate used to authenticate to the apiserver is expiring in less than 24.0 hours.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclientcertificateexpiration"
                        },
                        "duration": 0,
                        "evaluationTime": 0.000599027,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:52.178103221Z",
                        "name": "KubeClientCertificateExpiration",
                        "query": "apiserver_client_certificate_expiration_seconds_count{job=\"apiserver\"} > 0 and on(job) histogram_quantile(0.01, sum by(job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job=\"apiserver\"}[5m]))) < 86400",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "An aggregated API {{ $labels.name }}/{{ $labels.namespace }} has reported errors. The number of errors have increased for it in the past five minutes. High values indicate that the availability of the service changes too often.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-aggregatedapierrors"
                        },
                        "duration": 0,
                        "evaluationTime": 0.000106987,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:52.178704411Z",
                        "name": "AggregatedAPIErrors",
                        "query": "sum by(name, namespace) (increase(aggregator_unavailable_apiservice_count[5m])) > 2",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "An aggregated API {{ $labels.name }}/{{ $labels.namespace }} is down. It has not been available at least for the past five minutes.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-aggregatedapidown"
                        },
                        "duration": 300,
                        "evaluationTime": 0.000191798,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:52.178813229Z",
                        "name": "AggregatedAPIDown",
                        "query": "sum by(name, namespace) (sum_over_time(aggregator_unavailable_apiservice[5m])) > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "KubeAPI has disappeared from Prometheus target discovery.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapidown"
                        },
                        "duration": 900,
                        "evaluationTime": 0.000154996,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:52.179006586Z",
                        "name": "KubeAPIDown",
                        "query": "absent(up{job=\"apiserver\"} == 1)",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.000662422,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kubernetes-system-controller-manager.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:40:35.675611164Z",
                "name": "kubernetes-system-controller-manager",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "KubeControllerManager has disappeared from Prometheus target discovery.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecontrollermanagerdown"
                        },
                        "duration": 900,
                        "evaluationTime": 0.000642727,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:35.675628707Z",
                        "name": "KubeControllerManagerDown",
                        "query": "absent(up{job=\"kube-controller-manager\"} == 1)",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.002023188,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kubernetes-system-kubelet.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:40:38.33762775Z",
                "name": "kubernetes-system-kubelet",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "{{ $labels.node }} has been unready for more than 15 minutes.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodenotready"
                        },
                        "duration": 900,
                        "evaluationTime": 0.000260181,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:38.337634666Z",
                        "name": "KubeNodeNotReady",
                        "query": "kube_node_status_condition{condition=\"Ready\",job=\"kube-state-metrics\",status=\"true\"} == 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "{{ $labels.node }} is unreachable and some workloads may be rescheduled.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodeunreachable"
                        },
                        "duration": 120,
                        "evaluationTime": 0.000109221,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:38.337901819Z",
                        "name": "KubeNodeUnreachable",
                        "query": "kube_node_spec_taint{effect=\"NoSchedule\",job=\"kube-state-metrics\",key=\"node.kubernetes.io/unreachable\"} == 1",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Kubelet '{{ $labels.node }}' is running at {{ $value | humanizePercentage }} of its Pod capacity.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubelettoomanypods"
                        },
                        "duration": 900,
                        "evaluationTime": 0.000651359,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:38.338011959Z",
                        "name": "KubeletTooManyPods",
                        "query": "max by(node) (max by(instance) (kubelet_running_pod_count{job=\"kubelet\",metrics_path=\"/metrics\"}) * on(instance) group_left(node) kubelet_node_name{job=\"kubelet\",metrics_path=\"/metrics\"}) / max by(node) (kube_node_status_capacity_pods{job=\"kube-state-metrics\"} != 1) > 0.95",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "The readiness status of node {{ $labels.node }} has changed {{ $value }} times in the last 15 minutes.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodereadinessflapping"
                        },
                        "duration": 900,
                        "evaluationTime": 0.000176792,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:38.338665153Z",
                        "name": "KubeNodeReadinessFlapping",
                        "query": "sum by(node) (changes(kube_node_status_condition{condition=\"Ready\",status=\"true\"}[15m])) > 2",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "The Kubelet Pod Lifecycle Event Generator has a 99th percentile duration of {{ $value }} seconds on node {{ $labels.node }}.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletplegdurationhigh"
                        },
                        "duration": 300,
                        "evaluationTime": 0.000124891,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:38.338842881Z",
                        "name": "KubeletPlegDurationHigh",
                        "query": "node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile{quantile=\"0.99\"} >= 10",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Kubelet Pod startup 99th percentile latency is {{ $value }} seconds on node {{ $labels.node }}.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletpodstartuplatencyhigh"
                        },
                        "duration": 900,
                        "evaluationTime": 0.000583485,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:38.33896883Z",
                        "name": "KubeletPodStartUpLatencyHigh",
                        "query": "histogram_quantile(0.99, sum by(instance, le) (rate(kubelet_pod_worker_duration_seconds_bucket{job=\"kubelet\",metrics_path=\"/metrics\"}[5m]))) * on(instance) group_left(node) kubelet_node_name{job=\"kubelet\",metrics_path=\"/metrics\"} > 60",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Kubelet has disappeared from Prometheus target discovery.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletdown"
                        },
                        "duration": 900,
                        "evaluationTime": 9.7096e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:38.339553393Z",
                        "name": "KubeletDown",
                        "query": "absent(up{job=\"kubelet\",metrics_path=\"/metrics\"} == 1)",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.000541508,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kubernetes-system-scheduler.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:40:49.588455102Z",
                "name": "kubernetes-system-scheduler",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "KubeScheduler has disappeared from Prometheus target discovery.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeschedulerdown"
                        },
                        "duration": 900,
                        "evaluationTime": 0.000525986,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:49.588468903Z",
                        "name": "KubeSchedulerDown",
                        "query": "absent(up{job=\"kube-scheduler\"} == 1)",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.005653007,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kubernetes-system.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:40:47.922974889Z",
                "name": "kubernetes-system",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "There are {{ $value }} different semantic versions of Kubernetes components running.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeversionmismatch"
                        },
                        "duration": 900,
                        "evaluationTime": 0.001220925,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:47.923021244Z",
                        "name": "KubeVersionMismatch",
                        "query": "count(count by(gitVersion) (label_replace(kubernetes_build_info{job!~\"kube-dns|coredns\"}, \"gitVersion\", \"$1\", \"gitVersion\", \"(v[0-9]*.[0-9]*.[0-9]*).*\"))) > 1",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Kubernetes API server client '{{ $labels.job }}/{{ $labels.instance }}' is experiencing {{ $value | humanizePercentage }} errors.'",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclienterrors"
                        },
                        "duration": 900,
                        "evaluationTime": 0.004374596,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:47.924246942Z",
                        "name": "KubeClientErrors",
                        "query": "(sum by(instance, job) (rate(rest_client_requests_total{code=~\"5..\"}[5m])) / sum by(instance, job) (rate(rest_client_requests_total[5m]))) > 0.01",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.002150236,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-node-exporter.rules.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:40:57.32549666Z",
                "name": "node-exporter.rules",
                "rules": [
                    {
                        "evaluationTime": 0.000420297,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:57.325503103Z",
                        "name": "instance:node_num_cpu:sum",
                        "query": "count without(cpu) (count without(mode) (node_cpu_seconds_total{job=\"node-exporter\"}))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.00015973,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:57.325924735Z",
                        "name": "instance:node_cpu_utilisation:rate1m",
                        "query": "1 - avg without(cpu, mode) (rate(node_cpu_seconds_total{job=\"node-exporter\",mode=\"idle\"}[1m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 8.2567e-05,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:57.326085377Z",
                        "name": "instance:node_load1_per_cpu:ratio",
                        "query": "(node_load1{job=\"node-exporter\"} / instance:node_num_cpu:sum{job=\"node-exporter\"})",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000122071,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:57.326168731Z",
                        "name": "instance:node_memory_utilisation:ratio",
                        "query": "1 - (node_memory_MemAvailable_bytes{job=\"node-exporter\"} / node_memory_MemTotal_bytes{job=\"node-exporter\"})",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 6.1887e-05,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:57.326291733Z",
                        "name": "instance:node_vmstat_pgmajfault:rate1m",
                        "query": "rate(node_vmstat_pgmajfault{job=\"node-exporter\"}[1m])",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000141589,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:57.326354335Z",
                        "name": "instance_device:node_disk_io_time_seconds:rate1m",
                        "query": "rate(node_disk_io_time_seconds_total{device=~\"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\",job=\"node-exporter\"}[1m])",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000159797,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:57.326497078Z",
                        "name": "instance_device:node_disk_io_time_weighted_seconds:rate1m",
                        "query": "rate(node_disk_io_time_weighted_seconds_total{device=~\"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\",job=\"node-exporter\"}[1m])",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000294692,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:57.326658534Z",
                        "name": "instance:node_network_receive_bytes_excluding_lo:rate1m",
                        "query": "sum without(device) (rate(node_network_receive_bytes_total{device!=\"lo\",job=\"node-exporter\"}[1m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000311761,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:57.326954097Z",
                        "name": "instance:node_network_transmit_bytes_excluding_lo:rate1m",
                        "query": "sum without(device) (rate(node_network_transmit_bytes_total{device!=\"lo\",job=\"node-exporter\"}[1m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000195758,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:57.327266923Z",
                        "name": "instance:node_network_receive_drop_excluding_lo:rate1m",
                        "query": "sum without(device) (rate(node_network_receive_drop_total{device!=\"lo\",job=\"node-exporter\"}[1m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000183166,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:57.327463345Z",
                        "name": "instance:node_network_transmit_drop_excluding_lo:rate1m",
                        "query": "sum without(device) (rate(node_network_transmit_drop_total{device!=\"lo\",job=\"node-exporter\"}[1m]))",
                        "type": "recording"
                    }
                ]
            },
            {
                "evaluationTime": 0.002576114,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-node-exporter.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:40:35.359639892Z",
                "name": "node-exporter",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available space left and is filling up.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemspacefillingup",
                            "summary": "Filesystem is predicted to run out of space within the next 24 hours."
                        },
                        "duration": 3600,
                        "evaluationTime": 0.000432318,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:35.35964754Z",
                        "name": "NodeFilesystemSpaceFillingUp",
                        "query": "(node_filesystem_avail_bytes{fstype!=\"\",job=\"node-exporter\"} / node_filesystem_size_bytes{fstype!=\"\",job=\"node-exporter\"} * 100 < 40 and predict_linear(node_filesystem_avail_bytes{fstype!=\"\",job=\"node-exporter\"}[6h], 24 * 60 * 60) < 0 and node_filesystem_readonly{fstype!=\"\",job=\"node-exporter\"} == 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available space left and is filling up fast.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemspacefillingup",
                            "summary": "Filesystem is predicted to run out of space within the next 4 hours."
                        },
                        "duration": 3600,
                        "evaluationTime": 0.00028365,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:35.360081312Z",
                        "name": "NodeFilesystemSpaceFillingUp",
                        "query": "(node_filesystem_avail_bytes{fstype!=\"\",job=\"node-exporter\"} / node_filesystem_size_bytes{fstype!=\"\",job=\"node-exporter\"} * 100 < 20 and predict_linear(node_filesystem_avail_bytes{fstype!=\"\",job=\"node-exporter\"}[6h], 4 * 60 * 60) < 0 and node_filesystem_readonly{fstype!=\"\",job=\"node-exporter\"} == 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available space left.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemalmostoutofspace",
                            "summary": "Filesystem has less than 5% space left."
                        },
                        "duration": 3600,
                        "evaluationTime": 0.000148404,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:35.36036623Z",
                        "name": "NodeFilesystemAlmostOutOfSpace",
                        "query": "(node_filesystem_avail_bytes{fstype!=\"\",job=\"node-exporter\"} / node_filesystem_size_bytes{fstype!=\"\",job=\"node-exporter\"} * 100 < 5 and node_filesystem_readonly{fstype!=\"\",job=\"node-exporter\"} == 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available space left.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemalmostoutofspace",
                            "summary": "Filesystem has less than 3% space left."
                        },
                        "duration": 3600,
                        "evaluationTime": 0.0001572,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:35.360515422Z",
                        "name": "NodeFilesystemAlmostOutOfSpace",
                        "query": "(node_filesystem_avail_bytes{fstype!=\"\",job=\"node-exporter\"} / node_filesystem_size_bytes{fstype!=\"\",job=\"node-exporter\"} * 100 < 3 and node_filesystem_readonly{fstype!=\"\",job=\"node-exporter\"} == 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available inodes left and is filling up.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemfilesfillingup",
                            "summary": "Filesystem is predicted to run out of inodes within the next 24 hours."
                        },
                        "duration": 3600,
                        "evaluationTime": 0.000239961,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:35.360673501Z",
                        "name": "NodeFilesystemFilesFillingUp",
                        "query": "(node_filesystem_files_free{fstype!=\"\",job=\"node-exporter\"} / node_filesystem_files{fstype!=\"\",job=\"node-exporter\"} * 100 < 40 and predict_linear(node_filesystem_files_free{fstype!=\"\",job=\"node-exporter\"}[6h], 24 * 60 * 60) < 0 and node_filesystem_readonly{fstype!=\"\",job=\"node-exporter\"} == 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available inodes left and is filling up fast.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemfilesfillingup",
                            "summary": "Filesystem is predicted to run out of inodes within the next 4 hours."
                        },
                        "duration": 3600,
                        "evaluationTime": 0.000209975,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:35.360914357Z",
                        "name": "NodeFilesystemFilesFillingUp",
                        "query": "(node_filesystem_files_free{fstype!=\"\",job=\"node-exporter\"} / node_filesystem_files{fstype!=\"\",job=\"node-exporter\"} * 100 < 20 and predict_linear(node_filesystem_files_free{fstype!=\"\",job=\"node-exporter\"}[6h], 4 * 60 * 60) < 0 and node_filesystem_readonly{fstype!=\"\",job=\"node-exporter\"} == 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available inodes left.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemalmostoutoffiles",
                            "summary": "Filesystem has less than 5% inodes left."
                        },
                        "duration": 3600,
                        "evaluationTime": 0.000163564,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:35.361125133Z",
                        "name": "NodeFilesystemAlmostOutOfFiles",
                        "query": "(node_filesystem_files_free{fstype!=\"\",job=\"node-exporter\"} / node_filesystem_files{fstype!=\"\",job=\"node-exporter\"} * 100 < 5 and node_filesystem_readonly{fstype!=\"\",job=\"node-exporter\"} == 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available inodes left.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemalmostoutoffiles",
                            "summary": "Filesystem has less than 3% inodes left."
                        },
                        "duration": 3600,
                        "evaluationTime": 0.000150218,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:35.361289807Z",
                        "name": "NodeFilesystemAlmostOutOfFiles",
                        "query": "(node_filesystem_files_free{fstype!=\"\",job=\"node-exporter\"} / node_filesystem_files{fstype!=\"\",job=\"node-exporter\"} * 100 < 3 and node_filesystem_readonly{fstype!=\"\",job=\"node-exporter\"} == 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "{{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \"%.0f\" $value }} receive errors in the last two minutes.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodenetworkreceiveerrs",
                            "summary": "Network interface is reporting many receive errors."
                        },
                        "duration": 3600,
                        "evaluationTime": 0.000250245,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:35.361440829Z",
                        "name": "NodeNetworkReceiveErrs",
                        "query": "increase(node_network_receive_errs_total[2m]) > 10",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "{{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \"%.0f\" $value }} transmit errors in the last two minutes.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodenetworktransmiterrs",
                            "summary": "Network interface is reporting many transmit errors."
                        },
                        "duration": 3600,
                        "evaluationTime": 0.000186903,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:35.361692183Z",
                        "name": "NodeNetworkTransmitErrs",
                        "query": "increase(node_network_transmit_errs_total[2m]) > 10",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "{{ $value | humanizePercentage }} of conntrack entries are used",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodehighnumberconntrackentriesused",
                            "summary": "Number of conntrack are getting close to the limit"
                        },
                        "duration": 0,
                        "evaluationTime": 6.9861e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:35.361879813Z",
                        "name": "NodeHighNumberConntrackEntriesUsed",
                        "query": "(node_nf_conntrack_entries / node_nf_conntrack_entries_limit) > 0.75",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Clock on {{ $labels.instance }} is out of sync by more than 300s. Ensure NTP is configured correctly on this host.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodeclockskewdetected",
                            "summary": "Clock skew detected."
                        },
                        "duration": 600,
                        "evaluationTime": 0.000156058,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:35.361950351Z",
                        "name": "NodeClockSkewDetected",
                        "query": "(node_timex_offset_seconds > 0.05 and deriv(node_timex_offset_seconds[5m]) >= 0) or (node_timex_offset_seconds < -0.05 and deriv(node_timex_offset_seconds[5m]) <= 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Clock on {{ $labels.instance }} is not synchronising. Ensure NTP is configured on this host.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodeclocknotsynchronising",
                            "summary": "Clock not synchronising."
                        },
                        "duration": 600,
                        "evaluationTime": 0.000108336,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:35.362107194Z",
                        "name": "NodeClockNotSynchronising",
                        "query": "min_over_time(node_timex_sync_status[5m]) == 0",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.001161604,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-node-network.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:40:46.987131657Z",
                "name": "node-network",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Network interface \"{{ $labels.device }}\" changing it's up status often on node-exporter {{ $labels.namespace }}/{{ $labels.pod }}\""
                        },
                        "duration": 120,
                        "evaluationTime": 0.001144916,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:46.987146287Z",
                        "name": "NodeNetworkInterfaceFlapping",
                        "query": "changes(node_network_up{device!~\"veth.+\",job=\"node-exporter\"}[2m]) > 2",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.005875929,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-node.rules.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:40:48.107369651Z",
                "name": "node.rules",
                "rules": [
                    {
                        "evaluationTime": 0.000987176,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:48.107380208Z",
                        "name": ":kube_pod_info_node_count:",
                        "query": "sum(min by(cluster, node) (kube_pod_info))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.001738151,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:48.108372182Z",
                        "name": "node_namespace_pod:kube_pod_info:",
                        "query": "topk by(namespace, pod) (1, max by(node, namespace, pod) (label_replace(kube_pod_info{job=\"kube-state-metrics\"}, \"pod\", \"$1\", \"pod\", \"(.*)\")))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.002073715,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:48.110114432Z",
                        "name": "node:node_num_cpu:sum",
                        "query": "count by(cluster, node) (sum by(node, cpu) (node_cpu_seconds_total{job=\"node-exporter\"} * on(namespace, pod) group_left(node) node_namespace_pod:kube_pod_info:))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.001045331,
                        "health": "ok",
                        "lastEvaluation": "2020-05-26T15:40:48.11219771Z",
                        "name": ":node_memory_MemAvailable_bytes:sum",
                        "query": "sum by(cluster) (node_memory_MemAvailable_bytes{job=\"node-exporter\"} or (node_memory_Buffers_bytes{job=\"node-exporter\"} + node_memory_Cached_bytes{job=\"node-exporter\"} + node_memory_MemFree_bytes{job=\"node-exporter\"} + node_memory_Slab_bytes{job=\"node-exporter\"}))",
                        "type": "recording"
                    }
                ]
            },
            {
                "evaluationTime": 0.000773013,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-prometheus-operator.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:40:46.674177159Z",
                "name": "prometheus-operator",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Errors while reconciling {{ $labels.controller }} in {{ $labels.namespace }} Namespace."
                        },
                        "duration": 600,
                        "evaluationTime": 0.000564205,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:46.67419025Z",
                        "name": "PrometheusOperatorReconcileErrors",
                        "query": "rate(prometheus_operator_reconcile_errors_total{job=\"prometheus-operator-operator\",namespace=\"metalk8s-monitoring\"}[5m]) > 0.1",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Errors while reconciling Prometheus in {{ $labels.namespace }} Namespace."
                        },
                        "duration": 600,
                        "evaluationTime": 0.000191349,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:46.674757797Z",
                        "name": "PrometheusOperatorNodeLookupErrors",
                        "query": "rate(prometheus_operator_node_address_lookup_errors_total{job=\"prometheus-operator-operator\",namespace=\"metalk8s-monitoring\"}[5m]) > 0.1",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.001498172,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-prometheus.yaml",
                "interval": 30,
                "lastEvaluation": "2020-05-26T15:40:54.860367885Z",
                "name": "prometheus",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to reload its configuration.",
                            "summary": "Failed Prometheus configuration reload."
                        },
                        "duration": 600,
                        "evaluationTime": 0.000217234,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:54.860375377Z",
                        "name": "PrometheusBadConfig",
                        "query": "max_over_time(prometheus_config_last_reload_successful{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) == 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Alert notification queue of Prometheus {{$labels.namespace}}/{{$labels.pod}} is running full.",
                            "summary": "Prometheus alert notification queue predicted to run full in less than 30m."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000173269,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:54.860593719Z",
                        "name": "PrometheusNotificationQueueRunningFull",
                        "query": "(predict_linear(prometheus_notifications_queue_length{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m], 60 * 30) > min_over_time(prometheus_notifications_queue_capacity{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]))",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "{{ printf \"%.1f\" $value }}% errors while sending alerts from Prometheus {{$labels.namespace}}/{{$labels.pod}} to Alertmanager {{$labels.alertmanager}}.",
                            "summary": "Prometheus has encountered more than 1% errors sending alerts to a specific Alertmanager."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000113333,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:54.860767724Z",
                        "name": "PrometheusErrorSendingAlertsToSomeAlertmanagers",
                        "query": "(rate(prometheus_notifications_errors_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) / rate(prometheus_notifications_sent_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m])) * 100 > 1",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "{{ printf \"%.1f\" $value }}% minimum errors while sending alerts from Prometheus {{$labels.namespace}}/{{$labels.pod}} to any Alertmanager.",
                            "summary": "Prometheus encounters more than 3% errors sending alerts to any Alertmanager."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000131568,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:54.860881701Z",
                        "name": "PrometheusErrorSendingAlertsToAnyAlertmanager",
                        "query": "min without(alertmanager) (rate(prometheus_notifications_errors_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) / rate(prometheus_notifications_sent_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m])) * 100 > 3",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} is not connected to any Alertmanagers.",
                            "summary": "Prometheus is not connected to any Alertmanagers."
                        },
                        "duration": 600,
                        "evaluationTime": 8.5876e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:54.86101398Z",
                        "name": "PrometheusNotConnectedToAlertmanagers",
                        "query": "max_over_time(prometheus_notifications_alertmanagers_discovered{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) < 1",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} has detected {{$value | humanize}} reload failures over the last 3h.",
                            "summary": "Prometheus has issues reloading blocks from disk."
                        },
                        "duration": 14400,
                        "evaluationTime": 7.1898e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:54.86110082Z",
                        "name": "PrometheusTSDBReloadsFailing",
                        "query": "increase(prometheus_tsdb_reloads_failures_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[3h]) > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} has detected {{$value | humanize}} compaction failures over the last 3h.",
                            "summary": "Prometheus has issues compacting blocks."
                        },
                        "duration": 14400,
                        "evaluationTime": 6.4072e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:54.861173364Z",
                        "name": "PrometheusTSDBCompactionsFailing",
                        "query": "increase(prometheus_tsdb_compactions_failed_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[3h]) > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} is not ingesting samples.",
                            "summary": "Prometheus is not ingesting samples."
                        },
                        "duration": 600,
                        "evaluationTime": 6.38e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:54.861238165Z",
                        "name": "PrometheusNotIngestingSamples",
                        "query": "rate(prometheus_tsdb_head_samples_appended_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) <= 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} is dropping {{ printf \"%.4g\" $value  }} samples/s with different values but duplicated timestamp.",
                            "summary": "Prometheus is dropping samples with duplicate timestamps."
                        },
                        "duration": 600,
                        "evaluationTime": 5.5861e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:54.86130255Z",
                        "name": "PrometheusDuplicateTimestamps",
                        "query": "rate(prometheus_target_scrapes_sample_duplicate_timestamp_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} is dropping {{ printf \"%.4g\" $value  }} samples/s with timestamps arriving out of order.",
                            "summary": "Prometheus drops samples with out-of-order timestamps."
                        },
                        "duration": 600,
                        "evaluationTime": 5.5586e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:54.861359013Z",
                        "name": "PrometheusOutOfOrderTimestamps",
                        "query": "rate(prometheus_target_scrapes_sample_out_of_order_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} failed to send {{ printf \"%.1f\" $value }}% of the samples to {{ $labels.remote_name}}:{{ $labels.url }}",
                            "summary": "Prometheus fails to send samples to remote storage."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000118378,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:54.861415168Z",
                        "name": "PrometheusRemoteStorageFailures",
                        "query": "(rate(prometheus_remote_storage_failed_samples_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) / (rate(prometheus_remote_storage_failed_samples_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) + rate(prometheus_remote_storage_succeeded_samples_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]))) * 100 > 1",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} remote write is {{ printf \"%.1f\" $value }}s behind for {{ $labels.remote_name}}:{{ $labels.url }}.",
                            "summary": "Prometheus remote write is behind."
                        },
                        "duration": 900,
                        "evaluationTime": 9.4393e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:54.861534213Z",
                        "name": "PrometheusRemoteWriteBehind",
                        "query": "(max_over_time(prometheus_remote_storage_highest_timestamp_in_seconds{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) - on(job, instance) group_right() max_over_time(prometheus_remote_storage_queue_highest_sent_timestamp_seconds{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m])) > 120",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} remote write desired shards calculation wants to run {{ $value }} shards for queue {{ $labels.remote_name}}:{{ $labels.url }}, which is more than the max of {{ printf `prometheus_remote_storage_shards_max{instance=\"%s\",job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}` $labels.instance | query | first | value }}.",
                            "summary": "Prometheus remote write desired shards calculation wants to run more than configured max shards."
                        },
                        "duration": 900,
                        "evaluationTime": 6.5222e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:54.86162925Z",
                        "name": "PrometheusRemoteWriteDesiredShards",
                        "query": "(max_over_time(prometheus_remote_storage_shards_desired{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) > max_over_time(prometheus_remote_storage_shards_max{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]))",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to evaluate {{ printf \"%.0f\" $value }} rules in the last 5m.",
                            "summary": "Prometheus is failing rule evaluations."
                        },
                        "duration": 900,
                        "evaluationTime": 9.6648e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2020-05-26T15:40:54.861695082Z",
                        "name": "PrometheusRuleFailures",
                        "query": "increase(prometheus_rule_evaluation_failures_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} has missed {{ printf \"%.0f\" $value }} rule group evaluations in the last 5m.",
                            "summary": "Prometheus is missing rule evaluations due to slow rule group evaluation."
                        },
                        "duration": 900,
                        "evaluationTime": 7.2664e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2020-05-26T15:40:54.861792991Z",
                        "name": "PrometheusMissingRuleEvaluations",
                        "query": "increase(prometheus_rule_group_iterations_missed_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) > 0",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            }
        ]
    },
    "status": "success"
}