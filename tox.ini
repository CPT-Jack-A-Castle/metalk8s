[tox]
skipsdist = true

[testenv]
whitelist_externals = bash
basepython = python3
skip_install = true
setenv =
    VIRTUALENV_NO_DOWNLOAD=1

[testenv:lint-python]
deps =
    -r{toxinidir}/buildchain/requirements.txt
    -r{toxinidir}/buildchain/requirements-dev.txt
commands =
    pylint        buildchain/dodo.py buildchain/buildchain
    mypy --strict buildchain/dodo.py buildchain/buildchain

[testenv:lint-shell]
whitelist_externals += shellcheck
commands =
    bash -c "shellcheck doit.sh"
    bash -c "shellcheck **/*.sh"
    bash -c "shellcheck **/*.sh.in"

[testenv:lint-yaml]
deps =
    yamllint==1.15.0
commands =
    bash -c "yamllint eve/main.yml salt/**/*.yaml"

[testenv:tests]
deps =
    -r{toxinidir}/tests/requirements.txt
passenv =
    SSH_CONFIG_FILE
    TEST_HOSTS_LIST
    ISO_MOUNTPOINT
commands =
    bash -c "pytest \
             --ssh-config={env:SSH_CONFIG_FILE:<( \
                 VAGRANT_CWD={toxinidir} vagrant ssh-config bootstrap)} \
             --hosts={env:TEST_HOSTS_LIST:bootstrap} \
             --iso-root={env:ISO_MOUNTPOINT:/vagrant/_build/root} \
             {posargs} tests"

[pytest]
filterwarnings =
    ignore:encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.:UserWarning
    ignore:Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point:UserWarning
