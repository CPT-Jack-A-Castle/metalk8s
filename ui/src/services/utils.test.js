import {
  sortCapacity,
  addMissingDataPoint,
  jointDataPointBaseonTimeSeries,
} from './utils';

const testcases = [
  { storageCapacity: '1Ki' },
  { storageCapacity: '1Gi' },
  { storageCapacity: '100Mi' },
  { storageCapacity: '10Gi' },
  { storageCapacity: '1Mi' },
];

const testcases2 = [
  { storageCapacity: '42949670k' },
  { storageCapacity: '100Mi' },
  { storageCapacity: '250Gi' },
  { storageCapacity: '1Gi' },
  { storageCapacity: '1Mi' },
  { storageCapacity: '11111111111' },
  { storageCapacity: '10Gi' },
];

it('should sort correctly the array', () => {
  const result = sortCapacity(testcases);
  expect(result).toEqual([
    { storageCapacity: '1Ki' },
    { storageCapacity: '1Mi' },
    { storageCapacity: '100Mi' },
    { storageCapacity: '1Gi' },
    { storageCapacity: '10Gi' },
  ]);

  const result2 = sortCapacity(testcases2, 'storageCapacity');
  expect(result2).toEqual([
    { storageCapacity: '1Mi' },
    { storageCapacity: '100Mi' },
    { storageCapacity: '1Gi' },
    { storageCapacity: '10Gi' },
    { storageCapacity: '11111111111' },
    { storageCapacity: '42949670k' },
    { storageCapacity: '250Gi' },
  ]);
});

it('should return an empty array if no arguments', () => {
  const result = sortCapacity();
  expect(result).toEqual([]);
});

it('should not break when the user put the wrong sortBy', () => {
  const result = sortCapacity(testcases, 'toto');
  expect(result).toEqual([
    { storageCapacity: '1Ki' },
    { storageCapacity: '1Gi' },
    { storageCapacity: '100Mi' },
    { storageCapacity: '10Gi' },
    { storageCapacity: '1Mi' },
  ]);
});

it('should keep the original sequence when the user put the wrong sortDirection', () => {
  const result = sortCapacity(testcases, 'storageCapacity', 'toto');
  expect(result).toEqual([
    { storageCapacity: '1Ki' },
    { storageCapacity: '1Gi' },
    { storageCapacity: '100Mi' },
    { storageCapacity: '10Gi' },
    { storageCapacity: '1Mi' },
  ]);
});

it('should not break when a item is null', () => {
  const testcases = [
    { storageCapacity: '1Ki' },
    { storageCapacity: '1Gi' },
    { storageCapacity: '100Mi' },
    null,
    { storageCapacity: '1Mi' },
  ];

  const result = sortCapacity(testcases);
  expect(result).toEqual([
    { storageCapacity: '1Ki' },
    { storageCapacity: '1Mi' },
    { storageCapacity: '100Mi' },
    { storageCapacity: '1Gi' },
    null,
  ]);
});

it('test the sort with a custom sortBy', () => {
  const testcases = [
    { yanjin: '1Ki' },
    { yanjin: '1Gi' },
    { yanjin: '100Mi' },
    { yanjin: '1Mi' },
  ];

  const result = sortCapacity(testcases, 'yanjin');
  expect(result).toEqual([
    { yanjin: '1Ki' },
    { yanjin: '1Mi' },
    { yanjin: '100Mi' },
    { yanjin: '1Gi' },
  ]);
});

const originalValue_happy_path = [
  [1597227771, '124243968'],
  [1597231371, '257024000'],
  [1597234971, '388653056'],
  [1597238571, '607436800'],
  [1597242171, '744423424'],
  [1597245771, '576962560'],
  [1597249371, '710410240'],
  [1597252971, '875601920'],
  [1597256571, '1006166016'],
  [1597260171, '944873472'],
  [1597263771, '1079943168'],
  [1597267371, '993619968'],
  [1597270971, '1129857024'],
  [1597274571, '1054363648'],
  [1597278171, '1187053568'],
  [1597281771, '1124597760'],
  [1597285371, '1258352640'],
  [1597288971, '1174614016'],
  [1597292571, '1307803648'],
  [1597296171, '1247780864'],
  [1597299771, '1378639872'],
  [1597303371, '1318735872'],
  [1597306971, '1453105152'],
  [1597310571, '1366872064'],
  [1597314171, '1501855744'],
  [1597317771, '1440043008'],
  [1597321371, '1575239680'],
  [1597324971, '1513758720'],
  [1597328571, '1647599616'],
  [1597332171, '1545703424'],
  [1597335771, '1686786048'],
  [1597339371, '1634074624'],
  [1597342971, '1771479040'],
  [1597346571, '1586528256'],
  [1597350171, '1728045056'],
  [1597353771, '1641132032'],
  [1597357371, '1780215808'],
  [1597360971, '1718882304'],
  [1597364571, '1857847296'],
  [1597368171, '1795862528'],
  [1597371771, '1935839232'],
  [1597375371, '1848020992'],
  [1597378971, '1988173824'],
  [1597382571, '1928536064'],
  [1597386171, '2067943424'],
  [1597389771, '2005807104'],
  [1597393371, '2147667968'],
  [1597396971, '2042060800'],
  [1597400571, '2189520896'],
  [1597404171, '2135416832'],
  [1597407771, '2282680320'],
  [1597411371, '2224549888'],
  [1597414971, '2366930944'],
  [1597418571, '2288312320'],
  [1597422171, '2432937984'],
  [1597425771, '2375692288'],
  [1597429371, '2521849856'],
  [1597432971, '2457161728'],
  [1597436571, '2603888640'],
  [1597440171, '2513162240'],
  [1597443771, '2662252544'],
  [1597447371, '2595540992'],
  [1597450971, '2745110528'],
  [1597454571, '2679296000'],
  [1597458171, '2825035776'],
  [1597461771, '2713145344'],
  [1597465371, '2857259008'],
  [1597468971, '2796204032'],
  [1597472571, '2944036864'],
  [1597476171, '2879422464'],
  [1597479771, '3029291008'],
  [1597483371, '2939949056'],
  [1597486971, '3084365824'],
  [1597490571, '3023036416'],
  [1597494171, '3168931840'],
  [1597497771, '3107880960'],
  [1597501371, '3252453376'],
  [1597504971, '3165241344'],
  [1597508571, '3310698496'],
  [1597512171, '3245596672'],
  [1597515771, '3390693376'],
  [1597519371, '3327594496'],
  [1597522971, '3471110144'],
  [1597652571, '2948153344'],
  [1597656171, '3091877888'],
  [1597659771, '3217936384'],
  [1597663371, '3281379328'],
  [1597666971, '3408637952'],
  [1597670571, '3467714560'],
  [1597674171, '3598594048'],
  [1597677771, '3528597504'],
  [1597681371, '3665842176'],
  [1597684971, '3624923136'],
  [1597688571, '3768733696'],
  [1597692171, '3727278080'],
  [1597695771, '3869110272'],
  [1597699371, '3801698304'],
  [1597702971, '3945467904'],
  [1597706571, '3890057216'],
  [1597710171, '4030230528'],
  [1597713771, '3973914624'],
  [1597717371, '4117135360'],
  [1597720971, '4009005056'],
  [1597724571, '4154056704'],
  [1597728171, '4091985920'],
  [1597731771, '4234952704'],
  [1597735371, '4172861440'],
  [1597738971, '4321378304'],
  [1597742571, '4240547840'],
  [1597746171, '4394627072'],
  [1597753371, '4513300480'],
  [1597756971, '4478353408'],
  [1597760571, '4635328512'],
  [1597764171, '4560449536'],
  [1597767771, '4715659264'],
  [1597771371, '4665827328'],
  [1597774971, '4823789568'],
  [1597778571, '4757508096'],
  [1597782171, '4909756416'],
  [1597785771, '4810321920'],
  [1597789371, '4961185792'],
  [1597792971, '4899266560'],
  [1597796571, '5053898752'],
  [1597800171, '4997726208'],
  [1597803771, '5150830592'],
  [1597807371, '5064650752'],
  [1597810971, '5216804864'],
  [1597814571, '5148012544'],
  [1597818171, '5303730176'],
  [1597821771, '5234618368'],
  [1597825371, '5384785920'],
];
const startingTimeStamp = 1597220571;
const sampleDuration = 604800;
const sampleFrequency = 3600;
const newValues_happy_path = [
  [1597220571, null],
  [1597224171, null],
  [1597227771, '124243968'],
  [1597231371, '257024000'],
  [1597234971, '388653056'],
  [1597238571, '607436800'],
  [1597242171, '744423424'],
  [1597245771, '576962560'],
  [1597249371, '710410240'],
  [1597252971, '875601920'],
  [1597256571, '1006166016'],
  [1597260171, '944873472'],
  [1597263771, '1079943168'],
  [1597267371, '993619968'],
  [1597270971, '1129857024'],
  [1597274571, '1054363648'],
  [1597278171, '1187053568'],
  [1597281771, '1124597760'],
  [1597285371, '1258352640'],
  [1597288971, '1174614016'],
  [1597292571, '1307803648'],
  [1597296171, '1247780864'],
  [1597299771, '1378639872'],
  [1597303371, '1318735872'],
  [1597306971, '1453105152'],
  [1597310571, '1366872064'],
  [1597314171, '1501855744'],
  [1597317771, '1440043008'],
  [1597321371, '1575239680'],
  [1597324971, '1513758720'],
  [1597328571, '1647599616'],
  [1597332171, '1545703424'],
  [1597335771, '1686786048'],
  [1597339371, '1634074624'],
  [1597342971, '1771479040'],
  [1597346571, '1586528256'],
  [1597350171, '1728045056'],
  [1597353771, '1641132032'],
  [1597357371, '1780215808'],
  [1597360971, '1718882304'],
  [1597364571, '1857847296'],
  [1597368171, '1795862528'],
  [1597371771, '1935839232'],
  [1597375371, '1848020992'],
  [1597378971, '1988173824'],
  [1597382571, '1928536064'],
  [1597386171, '2067943424'],
  [1597389771, '2005807104'],
  [1597393371, '2147667968'],
  [1597396971, '2042060800'],
  [1597400571, '2189520896'],
  [1597404171, '2135416832'],
  [1597407771, '2282680320'],
  [1597411371, '2224549888'],
  [1597414971, '2366930944'],
  [1597418571, '2288312320'],
  [1597422171, '2432937984'],
  [1597425771, '2375692288'],
  [1597429371, '2521849856'],
  [1597432971, '2457161728'],
  [1597436571, '2603888640'],
  [1597440171, '2513162240'],
  [1597443771, '2662252544'],
  [1597447371, '2595540992'],
  [1597450971, '2745110528'],
  [1597454571, '2679296000'],
  [1597458171, '2825035776'],
  [1597461771, '2713145344'],
  [1597465371, '2857259008'],
  [1597468971, '2796204032'],
  [1597472571, '2944036864'],
  [1597476171, '2879422464'],
  [1597479771, '3029291008'],
  [1597483371, '2939949056'],
  [1597486971, '3084365824'],
  [1597490571, '3023036416'],
  [1597494171, '3168931840'],
  [1597497771, '3107880960'],
  [1597501371, '3252453376'],
  [1597504971, '3165241344'],
  [1597508571, '3310698496'],
  [1597512171, '3245596672'],
  [1597515771, '3390693376'],
  [1597519371, '3327594496'],
  [1597522971, '3471110144'],
  [1597526571, null],
  [1597530171, null],
  [1597533771, null],
  [1597537371, null],
  [1597540971, null],
  [1597544571, null],
  [1597548171, null],
  [1597551771, null],
  [1597555371, null],
  [1597558971, null],
  [1597562571, null],
  [1597566171, null],
  [1597569771, null],
  [1597573371, null],
  [1597576971, null],
  [1597580571, null],
  [1597584171, null],
  [1597587771, null],
  [1597591371, null],
  [1597594971, null],
  [1597598571, null],
  [1597602171, null],
  [1597605771, null],
  [1597609371, null],
  [1597612971, null],
  [1597616571, null],
  [1597620171, null],
  [1597623771, null],
  [1597627371, null],
  [1597630971, null],
  [1597634571, null],
  [1597638171, null],
  [1597641771, null],
  [1597645371, null],
  [1597648971, null],
  [1597652571, '2948153344'],
  [1597656171, '3091877888'],
  [1597659771, '3217936384'],
  [1597663371, '3281379328'],
  [1597666971, '3408637952'],
  [1597670571, '3467714560'],
  [1597674171, '3598594048'],
  [1597677771, '3528597504'],
  [1597681371, '3665842176'],
  [1597684971, '3624923136'],
  [1597688571, '3768733696'],
  [1597692171, '3727278080'],
  [1597695771, '3869110272'],
  [1597699371, '3801698304'],
  [1597702971, '3945467904'],
  [1597706571, '3890057216'],
  [1597710171, '4030230528'],
  [1597713771, '3973914624'],
  [1597717371, '4117135360'],
  [1597720971, '4009005056'],
  [1597724571, '4154056704'],
  [1597728171, '4091985920'],
  [1597731771, '4234952704'],
  [1597735371, '4172861440'],
  [1597738971, '4321378304'],
  [1597742571, '4240547840'],
  [1597746171, '4394627072'],
  [1597749771, null],
  [1597753371, '4513300480'],
  [1597756971, '4478353408'],
  [1597760571, '4635328512'],
  [1597764171, '4560449536'],
  [1597767771, '4715659264'],
  [1597771371, '4665827328'],
  [1597774971, '4823789568'],
  [1597778571, '4757508096'],
  [1597782171, '4909756416'],
  [1597785771, '4810321920'],
  [1597789371, '4961185792'],
  [1597792971, '4899266560'],
  [1597796571, '5053898752'],
  [1597800171, '4997726208'],
  [1597803771, '5150830592'],
  [1597807371, '5064650752'],
  [1597810971, '5216804864'],
  [1597814571, '5148012544'],
  [1597818171, '5303730176'],
  [1597821771, '5234618368'],
];
it('should add the missing data points of null for the last 7 days', () => {
  const result = addMissingDataPoint(
    originalValue_happy_path,
    startingTimeStamp,
    sampleDuration,
    sampleFrequency,
  );
  expect(result).toEqual(newValues_happy_path);
});

it('should return undefined when the original dataset is empty', () => {
  const result = addMissingDataPoint(
    [],
    startingTimeStamp,
    sampleDuration,
    sampleFrequency,
  );
  expect(result).toEqual(undefined);
});

it('should return undefined when the starting timestamp is undefined', () => {
  const result = addMissingDataPoint(
    originalValue_happy_path,
    undefined,
    sampleDuration,
    sampleFrequency,
  );
  expect(result).toEqual(undefined);
});

it('should return undefined when sample duration is null or 0', () => {
  const result = addMissingDataPoint(
    originalValue_all_0,
    startingTimeStamp,
    0,
    sampleFrequency,
  );
  expect(result).toEqual(undefined);
});

it('should return undefined when sample frequency is null or 0', () => {
  const result = addMissingDataPoint(
    originalValue_all_0,
    startingTimeStamp,
    sampleDuration,
    0,
  );
  expect(result).toEqual(undefined);
});

it('should return undefined when sample frequency is not valid', () => {
  const result = addMissingDataPoint(
    originalValue_all_0,
    startingTimeStamp,
    sampleDuration,
    1234,
  );
  expect(result).toEqual(undefined);
});

const originalValue_all_0 = [
  [1597220571, '0'],
  [1597224171, '0'],
  [1597227771, '0'],
  [1597231371, '0'],
  [1597234971, '0'],
  [1597238571, '0'],
  [1597242171, '0'],
  [1597245771, '0'],
  [1597249371, '0'],
  [1597252971, '0'],
  [1597256571, '0'],
  [1597260171, '0'],
  [1597263771, '0'],
  [1597267371, '0'],
  [1597270971, '0'],
  [1597274571, '0'],
  [1597278171, '0'],
  [1597281771, '0'],
  [1597285371, '0'],
  [1597288971, '0'],
  [1597292571, '0'],
  [1597296171, '0'],
  [1597299771, '0'],
  [1597303371, '0'],
  [1597306971, '0'],
  [1597310571, '0'],
  [1597314171, '0'],
  [1597317771, '0'],
  [1597321371, '0'],
  [1597324971, '0'],
  [1597328571, '0'],
  [1597332171, '0'],
  [1597335771, '0'],
  [1597339371, '0'],
  [1597342971, '0'],
  [1597346571, '0'],
  [1597350171, '0'],
  [1597353771, '0'],
  [1597357371, '0'],
  [1597360971, '0'],
  [1597364571, '0'],
  [1597368171, '0'],
  [1597371771, '0'],
  [1597375371, '0'],
  [1597378971, '0'],
  [1597382571, '0'],
  [1597386171, '0'],
  [1597389771, '0'],
  [1597393371, '0'],
  [1597396971, '0'],
  [1597400571, '0'],
  [1597404171, '0'],
  [1597407771, '0'],
  [1597411371, '0'],
  [1597414971, '0'],
  [1597418571, '0'],
  [1597422171, '0'],
  [1597425771, '0'],
  [1597429371, '0'],
  [1597432971, '0'],
  [1597436571, '0'],
  [1597440171, '0'],
  [1597443771, '0'],
  [1597447371, '0'],
  [1597450971, '0'],
  [1597454571, '0'],
  [1597458171, '0'],
  [1597461771, '0'],
  [1597465371, '0'],
  [1597468971, '0'],
  [1597472571, '0'],
  [1597476171, '0'],
  [1597479771, '0'],
  [1597483371, '0'],
  [1597486971, '0'],
  [1597490571, '0'],
  [1597494171, '0'],
  [1597497771, '0'],
  [1597501371, '0'],
  [1597504971, '0'],
  [1597508571, '0'],
  [1597512171, '0'],
  [1597515771, '0'],
  [1597519371, '0'],
  [1597522971, '0'],
  [1597526571, '0'],
  [1597530171, '0'],
  [1597533771, '0'],
  [1597537371, '0'],
  [1597540971, '0'],
  [1597544571, '0'],
  [1597548171, '0'],
  [1597551771, '0'],
  [1597555371, '0'],
  [1597558971, '0'],
  [1597562571, '0'],
  [1597566171, '0'],
  [1597569771, '0'],
  [1597573371, '0'],
  [1597576971, '0'],
  [1597580571, '0'],
  [1597584171, '0'],
  [1597587771, '0'],
  [1597591371, '0'],
  [1597594971, '0'],
  [1597598571, '0'],
  [1597602171, '0'],
  [1597605771, '0'],
  [1597609371, '0'],
  [1597612971, '0'],
  [1597616571, '0'],
  [1597620171, '0'],
  [1597623771, '0'],
  [1597627371, '0'],
  [1597630971, '0'],
  [1597634571, '0'],
  [1597638171, '0'],
  [1597641771, '0'],
  [1597645371, '0'],
  [1597648971, '0'],
  [1597652571, '0'],
  [1597656171, '0'],
  [1597659771, '0'],
  [1597663371, '0'],
  [1597666971, '0'],
  [1597670571, '0'],
  [1597674171, '0'],
  [1597677771, '0'],
  [1597681371, '0'],
  [1597684971, '0'],
  [1597688571, '0'],
  [1597692171, '0'],
  [1597695771, '0'],
  [1597699371, '0'],
  [1597702971, '0'],
  [1597706571, '0'],
  [1597710171, '0'],
  [1597713771, '0'],
  [1597717371, '0'],
  [1597720971, '0'],
  [1597724571, '0'],
  [1597728171, '0'],
  [1597731771, '0'],
  [1597735371, '0'],
  [1597738971, '0'],
  [1597742571, '0'],
  [1597746171, '0'],
  [1597749771, '0'],
  [1597753371, '0'],
  [1597756971, '0'],
  [1597760571, '0'],
  [1597764171, '0'],
  [1597767771, '0'],
  [1597771371, '0'],
  [1597774971, '0'],
  [1597778571, '0'],
  [1597782171, '0'],
  [1597785771, '0'],
  [1597789371, '0'],
  [1597792971, '0'],
  [1597796571, '0'],
  [1597800171, '0'],
  [1597803771, '0'],
  [1597807371, '0'],
  [1597810971, '0'],
  [1597814571, '0'],
  [1597818171, '0'],
  [1597821771, '0'],
];
it('should return all 0 when the original dataset is all 0', () => {
  const result = addMissingDataPoint(
    originalValue_all_0,
    startingTimeStamp,
    sampleDuration,
    sampleFrequency,
  );
  expect(result).toEqual(originalValue_all_0);
});

it('should return all 0 when the original dataset is all 0', () => {
  const result = addMissingDataPoint(
    originalValue_all_0,
    startingTimeStamp,
    sampleDuration,
    sampleFrequency,
  );
  expect(result).toEqual(originalValue_all_0);
});
